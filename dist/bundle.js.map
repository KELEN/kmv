{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 5b9cc5963ad795afdda1","webpack:///./src/index.ts","webpack:///./src/constants/constant.ts","webpack:///./src/util/object.ts","webpack:///./src/util/template.ts","webpack:///./src/dom/domOp.ts","webpack:///./src/dom/event.ts","webpack:///./src/util/render.ts","webpack:///./src/util/validator.ts","webpack:///./src/vdom/NormalDOM.ts","webpack:///./src/util/array.ts","webpack:///./src/util/observer.ts","webpack:///./src/util/watcher.ts","webpack:///./src/vdom/ForDOM.ts","webpack:///./src/vdom/vdom.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Kmv","opts","elSelector","elem","document","querySelector","that","this","data","flush","watchers","watcher_1","Watcher","$data","observer_1","observer","methods","setTimeout","render_1","renderInit","window","Object","defineProperty","value","default","Attr","K_MODEL","RegexpStr","brace","forStatement","bracket","isString","isParams","arithmeticOp","inputElement","arrtibuteKey","kAttribute","kOnAttribute","methodAndParam","NodeType","ELEMENT","ATTRIBUTE","TEXT","COMMENT","DOCUMENT","ArrayMethod","RenderType","ArrayOp","constant_1","getDotVal","obj","key","val","k","replace","arr","split","shift","undefined","depCopy","newObj","i","Array","isArray","slice","setObserveDotVal","observeData","tmp","len","length","object_1","transArithmeticOp","tpl","opReg","opRegArr","match","isParamReg","newStr","trim","test","isNaN","eval","compileTpl","regRes","braceReg","exec","text","template_1","validator_1","event_1","insertAfter","node","newNode","parentNode","insertBefore","nextSibling","inserBefore","deleteNode","parent","removeChild","changeNodeValue","firstChild","nodeValue","removeAttribute","attr","findIteratorNode","childrens","childNodes","iteratorNodes","forString","forKey","push","concat","hideNode","style","display","showNode","copyAttr","attribute","attrName","nodeName","attrVal","isKvmAttribute","setAttribute","event_2","func","method","params","bindEvent","insertNodeByIndex","index","tagName","idx","groupId","attrs","attributes","template","innerText","createElement","kv","name","removeNodeByIndex","replaceNodeByIndex","removeNode","event","param","methodsObj","addEventListener","apply","attachEvent","array_1","DomUtil","watcher","renderQueue","getQueue","_loop_1","renderType","INPUT","kModel_1","getAttribute","oninput","FOR","IF","kIf","nAttr","kAttr","kOn","i_1","val_1","kAttrVal","i_2","kEvent","kFunc","i_3","val_2","nAttrVal","reRender","kmv","reRenderList","reRenderFor","vdom","arrKey","forObjectKey","newArray","change","diff","arrayData","isBraceReg","str","isForStatement","validator","domOp_1","NormalDOM","prototype","transDOM","newEle","arr1","arr2","len1","len2","Math","min","op","CHANGE","deleteArr","POP","addArr","PUSH","arrayObserve","bigKey","timer","forEach","configurable","enumerable","writable","arguments","clearTimeout","ObjectUtil","set","newVal","get","VirtualDOM","queue","queueInit","child","nodeType","ForDOM","n","constant_2","NormalDOM_1","previousSibling","documentFragment","children","removeNamedItem","virtualDOM","connect","previousElementSibling","nextElementSibling","getVdom","docFrag","createDocumentFragment","newDom","appendChild","realPrevDom","realNextDom","$nextSibling","pushDOM","popDOM","changeText","SHIFT","shiftDOM","start","end","reRenderChild","__export","hasOwnProperty"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar render_1 = __webpack_require__(6);\r\n\tvar observer_1 = __webpack_require__(10);\r\n\tvar watcher_1 = __webpack_require__(11);\r\n\tfunction Kmv(opts) {\r\n\t    var elSelector = opts['el'];\r\n\t    var elem = document.querySelector(elSelector);\r\n\t    var that = this;\r\n\t    this.data = opts.data;\r\n\t    this.flush = false;\r\n\t    this.watchers = new watcher_1.Watcher(elem);\r\n\t    this.$data = observer_1.observer(opts.data, this);\r\n\t    this.methods = opts.methods;\r\n\t    // console.log(this.watchers);\r\n\t    setTimeout(function () {\r\n\t        render_1.renderInit(that);\r\n\t    }, 0);\r\n\t    return this;\r\n\t}\r\n\twindow.Kmv = Kmv;\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = Kmv;\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t *   URL:\r\n\t *   说明:\r\n\t *   负责人: kelen\r\n\t *   日期:  1/24 0024.\r\n\t */\r\n\texports.Attr = {\r\n\t    K_MODEL: 'k-model'\r\n\t};\r\n\texports.RegexpStr = {\r\n\t    brace: /\\{\\{((?:.|\\n)+?)\\}\\}/,\r\n\t    forStatement: /([a-z_]+[\\w]*)\\s+in\\s+([a-z_][\\w.]+)/,\r\n\t    bracket: /\\[['|\"]?(\\w+)['|\"]?\\]/,\r\n\t    isString: /'([^']*)'|\"([^\\\"]*)\"/,\r\n\t    isParams: /^[^\"|^'\\d]+.*/,\r\n\t    arithmeticOp: /\\*|\\+|-\\//g,\r\n\t    inputElement: /INPUT|TEXTAREA/,\r\n\t    arrtibuteKey: /k-for|k-model|k-if|k:.*|k-on:(.*)/,\r\n\t    kAttribute: /k:(.*)/,\r\n\t    kOnAttribute: /k-on:(.*)/,\r\n\t    methodAndParam: /([a-zA-Z\\d_]+)\\((.*)\\)/\r\n\t};\r\n\texports.NodeType = {\r\n\t    ELEMENT: 1,\r\n\t    ATTRIBUTE: 2,\r\n\t    TEXT: 3,\r\n\t    COMMENT: 8,\r\n\t    DOCUMENT: 9\r\n\t};\r\n\texports.ArrayMethod = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'reverse'];\r\n\tvar RenderType;\r\n\t(function (RenderType) {\r\n\t    RenderType[RenderType[\"TEXT\"] = 0] = \"TEXT\";\r\n\t    RenderType[RenderType[\"INPUT\"] = 1] = \"INPUT\";\r\n\t    RenderType[RenderType[\"TEXTAREA\"] = 2] = \"TEXTAREA\";\r\n\t    RenderType[RenderType[\"FOR\"] = 3] = \"FOR\";\r\n\t    RenderType[RenderType[\"IF\"] = 4] = \"IF\";\r\n\t    RenderType[RenderType[\"ATTRIBUTE\"] = 5] = \"ATTRIBUTE\";\r\n\t})(RenderType = exports.RenderType || (exports.RenderType = {}));\r\n\tvar ArrayOp;\r\n\t(function (ArrayOp) {\r\n\t    ArrayOp[ArrayOp[\"PUSH\"] = 0] = \"PUSH\";\r\n\t    ArrayOp[ArrayOp[\"POP\"] = 1] = \"POP\";\r\n\t    ArrayOp[ArrayOp[\"SORT\"] = 2] = \"SORT\";\r\n\t    ArrayOp[ArrayOp[\"CHANGE\"] = 3] = \"CHANGE\";\r\n\t    ArrayOp[ArrayOp[\"SHIFT\"] = 4] = \"SHIFT\";\r\n\t})(ArrayOp = exports.ArrayOp || (exports.ArrayOp = {}));\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar constant_1 = __webpack_require__(1);\r\n\texports.getDotVal = function (obj, key) {\r\n\t    var val, k;\r\n\t    if (key) {\r\n\t        key = key.replace(constant_1.RegexpStr.bracket, \".$1\"); // 把arr['name']/arr[\"name\"]/arr[0] 转为 arr.name/arr.0\r\n\t        val = obj;\r\n\t        // 获取对应的dot值\r\n\t        var arr = key.split(\".\") || [key];\r\n\t        while (k = arr.shift()) {\r\n\t            if (!val) {\r\n\t                val = undefined;\r\n\t                break;\r\n\t            }\r\n\t            val = val[k];\r\n\t        }\r\n\t    }\r\n\t    return val;\r\n\t};\r\n\texports.depCopy = function (obj) {\r\n\t    var newObj = {};\r\n\t    for (var i in obj) {\r\n\t        if (typeof obj[i] === 'object') {\r\n\t            if (Array.isArray(obj[i])) {\r\n\t                newObj[i] = obj[i].slice(0);\r\n\t            }\r\n\t            else {\r\n\t                newObj[i] = exports.depCopy(obj[i]);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            newObj[i] = obj[i];\r\n\t        }\r\n\t    }\r\n\t    return newObj;\r\n\t};\r\n\texports.setObserveDotVal = function (observeData, key, val) {\r\n\t    key = key.replace(constant_1.RegexpStr.bracket, \".$1\"); // 把arr['name']/arr[\"name\"]/arr[0] 转为 arr.name/arr.0\r\n\t    var tmp = observeData;\r\n\t    var arr = key.split(\".\");\r\n\t    var len = arr.length;\r\n\t    for (var i = 0; i < len - 1; i++) {\r\n\t        tmp = tmp[arr[i]];\r\n\t    }\r\n\t    tmp[arr[len - 1]] = val;\r\n\t};\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar constant_1 = __webpack_require__(1);\r\n\tvar object_1 = __webpack_require__(2);\r\n\t/**\r\n\t *  转换逻辑操作运算结果\r\n\t *\r\n\t */\r\n\texports.transArithmeticOp = function (tpl, obj) {\r\n\t    var opReg = constant_1.RegexpStr.arithmeticOp;\r\n\t    var arr = tpl.split(opReg); // 符号切分\r\n\t    var opRegArr = tpl.match(opReg);\r\n\t    var isParamReg = constant_1.RegexpStr.isParams;\r\n\t    var tmp;\r\n\t    var newStr = '';\r\n\t    for (var i = 0; i < arr.length; i++) {\r\n\t        tmp = arr[i].trim();\r\n\t        if (isParamReg.test(tmp)) {\r\n\t            // 如果是变量\r\n\t            var val = object_1.getDotVal(obj, tmp);\r\n\t            if (isNaN(val)) {\r\n\t                newStr += '\"' + val + '\"';\r\n\t            }\r\n\t            else {\r\n\t                if (!val)\r\n\t                    val = 0;\r\n\t                newStr += val;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            newStr += tmp;\r\n\t        }\r\n\t        if (i < arr.length - 1) {\r\n\t            newStr += opRegArr[i];\r\n\t        }\r\n\t    }\r\n\t    return eval(newStr);\r\n\t};\r\n\texports.compileTpl = function (tpl, obj) {\r\n\t    var braceReg = constant_1.RegexpStr.brace;\r\n\t    var regRes;\r\n\t    while (regRes = braceReg.exec(tpl)) {\r\n\t        var key = regRes ? regRes[1].trim() : ''; // 获取括号的键\r\n\t        var opReg = constant_1.RegexpStr.arithmeticOp; // 是否有操作符\r\n\t        var text = '';\r\n\t        if (opReg.test(key)) {\r\n\t            text = exports.transArithmeticOp(key, obj);\r\n\t        }\r\n\t        else {\r\n\t            text = object_1.getDotVal(obj, key);\r\n\t        }\r\n\t        tpl = tpl.replace(braceReg, text);\r\n\t    }\r\n\t    return tpl;\r\n\t};\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Created by kelen on 2017/2/6.\r\n\t */\r\n\tvar constant_1 = __webpack_require__(1);\r\n\tvar template_1 = __webpack_require__(3);\r\n\tvar validator_1 = __webpack_require__(7);\r\n\tvar event_1 = __webpack_require__(5);\r\n\texports.insertAfter = function (node, newNode) {\r\n\t    node && node.parentNode && node.parentNode.insertBefore(newNode, node.nextSibling);\r\n\t};\r\n\texports.inserBefore = function (node, newNode) {\r\n\t    node && node.parentNode && node.parentNode.insertBefore(newNode, node);\r\n\t};\r\n\texports.deleteNode = function (parent, node) {\r\n\t    parent && node && parent.removeChild(node);\r\n\t};\r\n\texports.changeNodeValue = function (node, text) {\r\n\t    node && node.firstChild && (node.firstChild.nodeValue = text);\r\n\t};\r\n\texports.removeAttribute = function (node, attr) {\r\n\t    node.removeAttribute(attr);\r\n\t};\r\n\texports.findIteratorNode = function (parentNode, key) {\r\n\t    var childrens = parentNode.childNodes;\r\n\t    var iteratorNodes = [];\r\n\t    for (var i = 0; i < childrens.length; i++) {\r\n\t        var node = childrens[i];\r\n\t        if (node.forString && node.forKey && node.forKey == key) {\r\n\t            iteratorNodes.push(node);\r\n\t        }\r\n\t        if (node.childNodes.length) {\r\n\t            iteratorNodes.concat(exports.findIteratorNode(node, key));\r\n\t        }\r\n\t    }\r\n\t    return iteratorNodes;\r\n\t};\r\n\texports.hideNode = function (node) {\r\n\t    node.style.display = \"none\";\r\n\t};\r\n\texports.showNode = function (node) {\r\n\t    node.style.display = \"block\";\r\n\t};\r\n\texports.copyAttr = function (node, attribute, Kmv) {\r\n\t    var data = Kmv.$data;\r\n\t    for (var i = 0; i < attribute.length; i++) {\r\n\t        var attr = attribute[i];\r\n\t        var attrName = attr.nodeName, attrVal = attr.nodeValue;\r\n\t        if (validator_1.isKvmAttribute(attrName, attrVal)) {\r\n\t            if (constant_1.RegexpStr.kAttribute.test(attrName)) {\r\n\t                var key = attr.nodeName.replace(constant_1.RegexpStr.kAttribute, '$1');\r\n\t                var val = template_1.compileTpl(attrVal, data);\r\n\t                node.setAttribute(key, val);\r\n\t                node.removeAttribute(attrName);\r\n\t            }\r\n\t            else if (constant_1.RegexpStr.kOnAttribute.test(attrName)) {\r\n\t                var event_2 = attrName.replace(constant_1.RegexpStr.kOnAttribute, '$1');\r\n\t                var func = template_1.compileTpl(attrVal, data);\r\n\t                var match = func.match(constant_1.RegexpStr.methodAndParam);\r\n\t                var method = match[1];\r\n\t                var params = match[2];\r\n\t                event_1.bindEvent(node, event_2, method, params, Kmv.methods, Kmv.data);\r\n\t                node.removeAttribute(attrName);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            node.setAttribute(attrName, attrVal);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t// 新增元素, last最后添加\r\n\texports.insertNodeByIndex = function (node, index, text) {\r\n\t    var tagName = node.tagName;\r\n\t    var idx = 0; // 第一个下标开始\r\n\t    var groupId = node.groupId;\r\n\t    var attrs = node.attributes;\r\n\t    var template = node.template;\r\n\t    if (index == 0) {\r\n\t        node.innerText = text;\r\n\t        node.style.display = \"\";\r\n\t    }\r\n\t    else {\r\n\t        while (idx < index - 1 && node) {\r\n\t            if (node.nextSibling && node.nextSibling.groupId == groupId) {\r\n\t                idx++;\r\n\t            }\r\n\t            node = node.nextSibling;\r\n\t        }\r\n\t        var newNode = document.createElement(tagName);\r\n\t        newNode.groupId = groupId;\r\n\t        newNode.template = template;\r\n\t        newNode.innerText = text;\r\n\t        // 父属性\r\n\t        for (var i = 0; i < attrs.length; i++) {\r\n\t            var kv = attrs[i];\r\n\t            switch (kv.name) {\r\n\t                default:\r\n\t                    newNode.setAttribute(kv.name, kv.nodeValue);\r\n\t            }\r\n\t        }\r\n\t        exports.insertAfter(node, newNode);\r\n\t    }\r\n\t};\r\n\texports.removeNodeByIndex = function (node, index) {\r\n\t    var tagName = node.tagName;\r\n\t    var idx = 0;\r\n\t    var groupId = node.groupId;\r\n\t    // 当下标为1时，重新选举标准\r\n\t    if (index == 0) {\r\n\t        if (node.nextSibling.groupId == groupId) {\r\n\t            node.nextSibling['forKey'] = node.forKey;\r\n\t            node.nextSibling['forString'] = node.forString;\r\n\t            node.parentNode.removeChild(node);\r\n\t        }\r\n\t        else {\r\n\t            node.style.display = 'none';\r\n\t            node.innerText = '';\r\n\t        }\r\n\t    }\r\n\t    else {\r\n\t        while (idx < index && node) {\r\n\t            if (node.nextSibling && node.groupId == groupId) {\r\n\t                idx++;\r\n\t            }\r\n\t            node = node.nextSibling;\r\n\t        }\r\n\t        node && node.parentNode.removeChild(node);\r\n\t    }\r\n\t};\r\n\texports.replaceNodeByIndex = function (node, index, text) {\r\n\t    var idx = 0;\r\n\t    var groupId = node.groupId;\r\n\t    while (idx < index && node) {\r\n\t        if (node.nextSibling && node.nextSibling.groupId == groupId) {\r\n\t            idx++;\r\n\t        }\r\n\t        node = node.nextSibling;\r\n\t    }\r\n\t    if (node) {\r\n\t        node.innerText = text;\r\n\t    }\r\n\t    else {\r\n\t    }\r\n\t};\r\n\texports.removeNode = function (node) {\r\n\t    node && node.parentNode.removeChild(node);\r\n\t};\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\texports.bindEvent = function (node, event, method, param, methodsObj, observeData) {\r\n\t    if (param === void 0) { param = ''; }\r\n\t    if (node.addEventListener) {\r\n\t        node.addEventListener(event, function () {\r\n\t            var params = param.split(',');\r\n\t            methodsObj[method].apply(observeData, params);\r\n\t        });\r\n\t    }\r\n\t    else {\r\n\t        node.attachEvent(\"on\" + event, function () {\r\n\t            var params = param.split(',');\r\n\t            methodsObj[method].apply(observeData, params);\r\n\t        });\r\n\t    }\r\n\t};\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar template_1 = __webpack_require__(3);\r\n\tvar constant_1 = __webpack_require__(1);\r\n\tvar object_1 = __webpack_require__(2);\r\n\tvar array_1 = __webpack_require__(9);\r\n\tvar DomUtil = __webpack_require__(4);\r\n\tvar event_1 = __webpack_require__(5);\r\n\texports.renderInit = function (Kmv) {\r\n\t    var watcher = Kmv.watchers;\r\n\t    var data = Kmv.$data;\r\n\t    var observeData = Kmv.data;\r\n\t    var renderQueue = watcher.getQueue();\r\n\t    var _loop_1 = function (i) {\r\n\t        var node = renderQueue[i];\r\n\t        switch (node.renderType) {\r\n\t            case constant_1.RenderType.TEXT:\r\n\t                var template = node.template;\r\n\t                var text = template_1.compileTpl(template, data);\r\n\t                node.nodeValue = text;\r\n\t                break;\r\n\t            case constant_1.RenderType.INPUT:\r\n\t                var kModel_1 = node.getAttribute(\"k-model\");\r\n\t                node.value = object_1.getDotVal(data, kModel_1);\r\n\t                node.oninput = function () {\r\n\t                    object_1.setObserveDotVal(observeData, kModel_1, this.value);\r\n\t                };\r\n\t                break;\r\n\t            case constant_1.RenderType.FOR:\r\n\t                node.renderInit(Kmv);\r\n\t                break;\r\n\t            case constant_1.RenderType.IF:\r\n\t                var kIf = node.getAttribute(\"k-if\");\r\n\t                var val = object_1.getDotVal(data, kIf);\r\n\t                if (val) {\r\n\t                    DomUtil.showNode(node);\r\n\t                }\r\n\t                else {\r\n\t                    DomUtil.hideNode(node);\r\n\t                }\r\n\t                node.kIf = kIf;\r\n\t                break;\r\n\t            case constant_1.RenderType.ATTRIBUTE:\r\n\t                var nAttr = node.nAttr;\r\n\t                var kAttr = node.kAttr;\r\n\t                var kOn = node.kOn;\r\n\t                for (var i_1 = 0; i_1 < kAttr.length; i_1++) {\r\n\t                    // k属性\r\n\t                    var attr = kAttr[i_1].kAttr.replace(constant_1.RegexpStr.kAttribute, '$1');\r\n\t                    var val_1 = template_1.compileTpl(kAttr[i_1].kAttrVal, data);\r\n\t                    node.setAttribute(attr, val_1);\r\n\t                }\r\n\t                for (var i_2 = 0; i_2 < kOn.length; i_2++) {\r\n\t                    // k-on事件\r\n\t                    var event_2 = kOn[i_2].kEvent.replace(constant_1.RegexpStr.kOnAttribute, '$1');\r\n\t                    var func = template_1.compileTpl(kOn[i_2].kFunc, data);\r\n\t                    var match = func.match(constant_1.RegexpStr.methodAndParam);\r\n\t                    if (match) {\r\n\t                        // 有参数 k-on:click = say() 或者 k-on:click = say('hello')\r\n\t                        var method = match[1];\r\n\t                        var params = match[2];\r\n\t                        event_1.bindEvent(node, event_2, method, params, Kmv.methods, Kmv.data);\r\n\t                    }\r\n\t                    else {\r\n\t                        event_1.bindEvent(node, event_2, func, '', Kmv.methods, Kmv.data);\r\n\t                    }\r\n\t                    DomUtil.removeAttribute(node, kOn[i_2].kEvent);\r\n\t                }\r\n\t                for (var i_3 = 0; i_3 < nAttr.length; i_3++) {\r\n\t                    // k属性\r\n\t                    var attr = nAttr[i_3].nAttr.replace(constant_1.RegexpStr.kAttribute, '$1');\r\n\t                    var val_2 = template_1.compileTpl(nAttr[i_3].nAttrVal, data);\r\n\t                    node.setAttribute(attr, val_2);\r\n\t                }\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    for (var i = 0; i < renderQueue.length; i++) {\r\n\t        _loop_1(i);\r\n\t    }\r\n\t};\r\n\texports.reRender = function (kmv, key) {\r\n\t    var renderQueue = kmv.watchers.getQueue();\r\n\t    var data = kmv.$data;\r\n\t    for (var i = 0; i < renderQueue.length; i++) {\r\n\t        var node = renderQueue[i];\r\n\t        switch (node.renderType) {\r\n\t            case constant_1.RenderType.TEXT:\r\n\t                var template = node.template;\r\n\t                node.nodeValue = template_1.compileTpl(template, data);\r\n\t                break;\r\n\t            case constant_1.RenderType.FOR:\r\n\t                node.reRenderList(kmv);\r\n\t                break;\r\n\t            case constant_1.RenderType.IF:\r\n\t                var kIf = node.kIf;\r\n\t                var val = object_1.getDotVal(data, kIf);\r\n\t                if (val) {\r\n\t                    DomUtil.showNode(node);\r\n\t                }\r\n\t                else {\r\n\t                    DomUtil.hideNode(node);\r\n\t                }\r\n\t                break;\r\n\t        }\r\n\t    }\r\n\t};\r\n\texports.reRenderFor = function (kmv, forKey) {\r\n\t    var renderQueue = kmv.watchers.getQueue();\r\n\t    var data = kmv.$data;\r\n\t    for (var i = 0; i < renderQueue.length; i++) {\r\n\t        var node = renderQueue[i];\r\n\t        if (node.renderType == constant_1.RenderType.FOR) {\r\n\t            var vdom = node.vdom;\r\n\t            var arrKey = vdom.forObjectKey;\r\n\t            var newArray = object_1.getDotVal(data, arrKey);\r\n\t            var change = array_1.diff(vdom.arrayData, newArray);\r\n\t            node.reRender(change, kmv);\r\n\t        }\r\n\t    }\r\n\t};\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar constant_1 = __webpack_require__(1);\r\n\tvar isBraceReg = function (str) {\r\n\t    return constant_1.RegexpStr.brace.test(str);\r\n\t};\r\n\t/**\r\n\t *  是否有包含语法\r\n\t * @param str\r\n\t */\r\n\tvar isForStatement = function (str) {\r\n\t    return constant_1.RegexpStr.forStatement.test(str);\r\n\t};\r\n\tvar validator = {\r\n\t    isBraceReg: isBraceReg,\r\n\t    isForStatement: isForStatement\r\n\t};\r\n\texports.isKvmAttribute = function (key, val) {\r\n\t    return constant_1.RegexpStr.arrtibuteKey.test(key) || constant_1.RegexpStr.brace.test(val);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = validator;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar template_1 = __webpack_require__(3);\r\n\tvar domOp_1 = __webpack_require__(4);\r\n\tvar NormalDOM = (function () {\r\n\t    function NormalDOM(node) {\r\n\t        // h3\r\n\t        this.vdom = {\r\n\t            tagName: node.tagName,\r\n\t            template: node.firstChild.nodeValue,\r\n\t            attributes: node.attributes\r\n\t        };\r\n\t    }\r\n\t    NormalDOM.prototype.transDOM = function (Kmv) {\r\n\t        var data = Kmv.$data;\r\n\t        var newEle = document.createElement(this.vdom.tagName);\r\n\t        newEle.template = this.vdom.template;\r\n\t        var text = template_1.compileTpl(this.vdom.template, data);\r\n\t        newEle.innerText = text;\r\n\t        domOp_1.copyAttr(newEle, this.vdom.attributes, Kmv);\r\n\t        return newEle;\r\n\t    };\r\n\t    return NormalDOM;\r\n\t}());\r\n\texports.NormalDOM = NormalDOM;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar constant_1 = __webpack_require__(1);\r\n\texports.diff = function (arr1, arr2) {\r\n\t    var change = [];\r\n\t    var len1 = arr1.length, len2 = arr2.length;\r\n\t    var len = Math.min(len1, len2);\r\n\t    for (var i = 0; i < len; i++) {\r\n\t        if (arr1[i] !== arr2[i]) {\r\n\t            change.push({\r\n\t                op: constant_1.ArrayOp.CHANGE,\r\n\t                index: i,\r\n\t                text: arr2[i]\r\n\t            });\r\n\t        }\r\n\t    }\r\n\t    if (len1 > len2) {\r\n\t        var deleteArr = arr1.slice(len2);\r\n\t        for (var i = 0; i < deleteArr.length; i++) {\r\n\t            change.push({\r\n\t                op: constant_1.ArrayOp.POP,\r\n\t                index: i + len2,\r\n\t                text: deleteArr[i]\r\n\t            });\r\n\t        }\r\n\t    }\r\n\t    else {\r\n\t        var addArr = arr2.slice(len1);\r\n\t        for (var i = 0; i < addArr.length; i++) {\r\n\t            change.push({\r\n\t                op: constant_1.ArrayOp.PUSH,\r\n\t                index: i + len,\r\n\t                text: addArr[i]\r\n\t            });\r\n\t        }\r\n\t    }\r\n\t    return change;\r\n\t};\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar ObjectUtil = __webpack_require__(2);\r\n\tvar render_1 = __webpack_require__(6);\r\n\tvar constant_1 = __webpack_require__(1);\r\n\tvar object_1 = __webpack_require__(2);\r\n\t/**\r\n\t *   URL:\r\n\t *   说明:\r\n\t *   负责人: kelen\r\n\t *   日期:  1/24 0024.\r\n\t */\r\n\texports.observer = function (obj, kmv, key) {\r\n\t    if (key === void 0) { key = ''; }\r\n\t    var newObj = ObjectUtil.depCopy(obj);\r\n\t    var _loop_1 = function (i) {\r\n\t        var bigKey = key ? key + \".\" + i : i;\r\n\t        if (typeof obj[i] == 'object') {\r\n\t            if (Array.isArray(obj[i])) {\r\n\t                arrayObserve(obj[i], kmv, bigKey);\r\n\t            }\r\n\t            else {\r\n\t                exports.observer(obj[i], kmv, bigKey);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            Object.defineProperty(obj, i, {\r\n\t                set: function (newVal) {\r\n\t                    ObjectUtil.setObserveDotVal(kmv.$data, bigKey, newVal);\r\n\t                    render_1.reRender(kmv, i);\r\n\t                },\r\n\t                get: function () {\r\n\t                    return object_1.getDotVal(kmv.$data, bigKey);\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    for (var i in obj) {\r\n\t        _loop_1(i);\r\n\t    }\r\n\t    return newObj;\r\n\t};\r\n\tfunction arrayObserve(arr, kmv, bigKey) {\r\n\t    var timer;\r\n\t    // 监听array操作\r\n\t    constant_1.ArrayMethod.forEach(function (method) {\r\n\t        Object.defineProperty(arr, method, {\r\n\t            configurable: false,\r\n\t            enumerable: false,\r\n\t            writable: false,\r\n\t            value: function () {\r\n\t                Array.prototype[method].apply(object_1.getDotVal(kmv.$data, bigKey), arguments);\r\n\t                if (timer) {\r\n\t                    clearTimeout(timer);\r\n\t                }\r\n\t                timer = setTimeout(function () {\r\n\t                    render_1.reRenderFor(kmv, bigKey);\r\n\t                }, 10);\r\n\t            }\r\n\t        });\r\n\t    });\r\n\t    /*arr.push = function() {\r\n\t        Array.prototype.push.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n\t        if (timer) {\r\n\t            clearTimeout(timer);\r\n\t        }\r\n\t        timer = setTimeout(function () {\r\n\t            reRenderFor(kmv, bigKey)\r\n\t        }, 10)\r\n\t    }\r\n\t\r\n\t    arr.pop = function () {\r\n\t        Array.prototype.pop.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n\t        if (timer) {\r\n\t            clearTimeout(timer);\r\n\t        }\r\n\t        timer = setTimeout(function () {\r\n\t            reRenderFor(kmv, bigKey)\r\n\t        }, 10)\r\n\t    }\r\n\t\r\n\t    arr.shift = function () {\r\n\t        Array.prototype.shift.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n\t        if (timer) {\r\n\t            clearTimeout(timer);\r\n\t        }\r\n\t        timer = setTimeout(function () {\r\n\t            reRenderFor(kmv, bigKey);\r\n\t        }, 10)\r\n\t    }\r\n\t\r\n\t    arr.unshift = function () {\r\n\t        Array.prototype.unshift.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n\t        if (timer) {\r\n\t            clearTimeout(timer);\r\n\t        }\r\n\t        timer = setTimeout(function () {\r\n\t            reRenderFor(kmv, bigKey)\r\n\t        }, 10)\r\n\t    }\r\n\t\r\n\t    arr.splice = function () {\r\n\t        Array.prototype.splice.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n\t        if (timer) {\r\n\t            clearTimeout(timer);\r\n\t        }\r\n\t        timer = setTimeout(function () {\r\n\t            reRenderFor(kmv, bigKey)\r\n\t        }, 10)\r\n\t    }\r\n\t\r\n\t    arr.sort =function () {\r\n\t        Array.prototype.sort.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n\t        if (timer) {\r\n\t            clearTimeout(timer);\r\n\t        }\r\n\t        timer = setTimeout(function () {\r\n\t            reRenderFor(kmv, bigKey)\r\n\t        }, 10)\r\n\t    };*/\r\n\t}\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar constant_1 = __webpack_require__(1);\r\n\tvar validator_1 = __webpack_require__(7);\r\n\tvar VirtualDOM = __webpack_require__(13);\r\n\tvar Watcher = (function () {\r\n\t    function Watcher(node) {\r\n\t        this.queue = [];\r\n\t        this.queue = this.queueInit(node);\r\n\t    }\r\n\t    Watcher.prototype.getQueue = function () {\r\n\t        return this.queue;\r\n\t    };\r\n\t    Watcher.prototype.queueInit = function (node) {\r\n\t        var childNodes = node.childNodes;\r\n\t        for (var i = 0; i < childNodes.length; i++) {\r\n\t            var child = childNodes[i];\r\n\t            switch (child.nodeType) {\r\n\t                case constant_1.NodeType.TEXT:\r\n\t                    var nodeValue = child.nodeValue;\r\n\t                    if (constant_1.RegexpStr.brace.test(nodeValue)) {\r\n\t                        child.renderType = constant_1.RenderType.TEXT;\r\n\t                        child.template = nodeValue;\r\n\t                        this.queue.push(child);\r\n\t                    }\r\n\t                    break;\r\n\t                case constant_1.NodeType.ELEMENT:\r\n\t                    if (child.getAttribute(\"k-for\")) {\r\n\t                        // 转为虚拟dom\r\n\t                        var vdom = new VirtualDOM.ForDOM(child);\r\n\t                        vdom.renderType = constant_1.RenderType.FOR;\r\n\t                        this.queue.push(vdom);\r\n\t                        child.parentNode.removeChild(child); // 移除自身元素\r\n\t                    }\r\n\t                    else if (child.getAttribute(\"k-if\")) {\r\n\t                        child.renderType = constant_1.RenderType.IF;\r\n\t                        this.queue.push(child);\r\n\t                    }\r\n\t                    else if (child.getAttribute(\"k-model\")) {\r\n\t                        var attrs = child.attributes;\r\n\t                        for (var n = 0; n < attrs.length; n++) {\r\n\t                            var attr = attrs[n];\r\n\t                            if (validator_1.isKvmAttribute(attr.nodeName, attr.nodeValue)) {\r\n\t                                child.renderType = constant_1.RenderType.INPUT;\r\n\t                                this.queue.push(child);\r\n\t                                break;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        var attrs = child.attributes;\r\n\t                        child.nAttr = []; // 常规属性\r\n\t                        child.kAttr = []; // k属性\r\n\t                        child.kOn = []; // k-on属性\r\n\t                        for (var n = 0; n < attrs.length; n++) {\r\n\t                            var attr = attrs[n];\r\n\t                            if (validator_1.isKvmAttribute(attr.nodeName, attr.nodeValue)) {\r\n\t                                child.renderType = constant_1.RenderType.ATTRIBUTE;\r\n\t                                if (constant_1.RegexpStr.kAttribute.test(attr.nodeName)) {\r\n\t                                    child.kAttr.push({\r\n\t                                        kAttr: attr.nodeName,\r\n\t                                        kAttrVal: attr.nodeValue\r\n\t                                    });\r\n\t                                    child.removeAttribute(attr.nodeName);\r\n\t                                }\r\n\t                                else if (constant_1.RegexpStr.kOnAttribute.test(attr.nodeName)) {\r\n\t                                    child.kOn.push({\r\n\t                                        kEvent: attr.nodeName,\r\n\t                                        kFunc: attr.nodeValue\r\n\t                                    });\r\n\t                                }\r\n\t                                else {\r\n\t                                    //\r\n\t                                    child.nAttr.push({\r\n\t                                        nAttr: attr.nodeName,\r\n\t                                        nAttrVal: attr.nodeValue\r\n\t                                    });\r\n\t                                }\r\n\t                            }\r\n\t                        }\r\n\t                        if (child.renderType === constant_1.RenderType.ATTRIBUTE)\r\n\t                            this.queue.push(child);\r\n\t                    }\r\n\t                    break;\r\n\t            }\r\n\t            if (child.childNodes.length) {\r\n\t                this.queue.concat(this.queueInit(child));\r\n\t            }\r\n\t        }\r\n\t        return this.queue;\r\n\t    };\r\n\t    return Watcher;\r\n\t}());\r\n\texports.Watcher = Watcher;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar DomUtil = __webpack_require__(4);\r\n\tvar object_1 = __webpack_require__(2);\r\n\tvar template_1 = __webpack_require__(3);\r\n\tvar constant_1 = __webpack_require__(1);\r\n\tvar constant_2 = __webpack_require__(1);\r\n\tvar NormalDOM_1 = __webpack_require__(8);\r\n\tvar ForDOM = (function () {\r\n\t    function ForDOM(node) {\r\n\t        var forString = node.getAttribute(\"k-for\");\r\n\t        var match = constant_1.RegexpStr.forStatement.exec(forString);\r\n\t        var template = node.firstChild && node.firstChild.nodeValue;\r\n\t        this.vdom = {\r\n\t            tagName: node.tagName,\r\n\t            forString: forString,\r\n\t            forObjectKey: match[2].trim(),\r\n\t            forKey: match[1].trim(),\r\n\t            template: template,\r\n\t            previousSibling: node.previousSibling,\r\n\t            nextSibling: node.nextSibling,\r\n\t            documentFragment: null,\r\n\t            children: [],\r\n\t            arrayData: [],\r\n\t            attributes: node.attributes\r\n\t        };\r\n\t        this.vdom.attributes.removeNamedItem(\"k-for\");\r\n\t        if (node.children) {\r\n\t            for (var i = 0; i < node.children.length; i++) {\r\n\t                var virtualDOM = new NormalDOM_1.NormalDOM(node.children[i]);\r\n\t                this.vdom.children.push(virtualDOM);\r\n\t            }\r\n\t        }\r\n\t        this.connect(node.previousElementSibling, node.nextElementSibling);\r\n\t    }\r\n\t    ForDOM.prototype.getVdom = function () {\r\n\t        return this.vdom;\r\n\t    };\r\n\t    ForDOM.prototype.renderInit = function (Kmv) {\r\n\t        var data = Kmv.$data;\r\n\t        var tagName = this.vdom.tagName;\r\n\t        var template = this.vdom.template;\r\n\t        var arrKey = this.vdom.forObjectKey;\r\n\t        var arrayData = object_1.getDotVal(data, arrKey);\r\n\t        var docFrag = document.createDocumentFragment();\r\n\t        var obj = object_1.depCopy(data);\r\n\t        for (var i = 0; i < arrayData.length; i++) {\r\n\t            var newDom = document.createElement(tagName);\r\n\t            var text = object_1.getDotVal(data, this.vdom.forObjectKey + \".\" + i);\r\n\t            obj[this.vdom.forKey] = text;\r\n\t            newDom.innerText = template_1.compileTpl(template, obj);\r\n\t            for (var n = 0; n < this.vdom.children.length; n++) {\r\n\t                newDom.appendChild(this.vdom.children[n].transDOM(Kmv));\r\n\t            }\r\n\t            DomUtil.copyAttr(newDom, this.vdom.attributes, Kmv);\r\n\t            docFrag.appendChild(newDom);\r\n\t        }\r\n\t        DomUtil.insertAfter(this.vdom.previousSibling, docFrag);\r\n\t        this.vdom.arrayData = arrayData.slice(0);\r\n\t    };\r\n\t    ForDOM.prototype.connect = function (realPrevDom, realNextDom) {\r\n\t        realPrevDom && (realPrevDom.$nextSibling = this.vdom);\r\n\t        this.vdom.$nextSibling = realNextDom;\r\n\t    };\r\n\t    ForDOM.prototype.reRender = function (change, Kmv) {\r\n\t        var data = Kmv.$data;\r\n\t        for (var i = 0; i < change.length; i++) {\r\n\t            var op = change[i].op;\r\n\t            switch (op) {\r\n\t                case constant_2.ArrayOp.PUSH:\r\n\t                    this.pushDOM(Kmv, change[i].index);\r\n\t                    break;\r\n\t                case constant_2.ArrayOp.POP:\r\n\t                    this.popDOM();\r\n\t                    break;\r\n\t                case constant_2.ArrayOp.CHANGE:\r\n\t                    var obj = object_1.depCopy(data); // 拷贝一份对象\r\n\t                    this.changeText(obj, change[i].index);\r\n\t                    break;\r\n\t                case constant_2.ArrayOp.SHIFT:\r\n\t                    this.shiftDOM();\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        var arrKey = this.vdom.forObjectKey;\r\n\t        var arrayData = object_1.getDotVal(data, arrKey);\r\n\t        this.vdom.arrayData = arrayData.slice(0);\r\n\t    };\r\n\t    ForDOM.prototype.reRenderList = function (Kmv) {\r\n\t        var data = Kmv.$data;\r\n\t        var start = this.vdom.previousSibling;\r\n\t        var end = this.vdom.nextSibling;\r\n\t        var index = 0;\r\n\t        var obj = object_1.depCopy(data);\r\n\t        var template = this.vdom.template;\r\n\t        while (start !== end) {\r\n\t            start = start.nextSibling;\r\n\t            var text = object_1.getDotVal(data, this.vdom.forObjectKey + \".\" + index);\r\n\t            obj[this.vdom.forKey] = text;\r\n\t            text = template_1.compileTpl(template, obj);\r\n\t            DomUtil.changeNodeValue(start, text);\r\n\t            var childrens = start.children || [];\r\n\t            for (var i = 0; i < childrens.length; i++) {\r\n\t                this.reRenderChild(childrens[i], data);\r\n\t            }\r\n\t            index++;\r\n\t        }\r\n\t    };\r\n\t    ForDOM.prototype.reRenderChild = function (node, data) {\r\n\t        var template = node.template;\r\n\t        node.firstChild.nodeValue = template_1.compileTpl(template, data);\r\n\t    };\r\n\t    ForDOM.prototype.pushDOM = function (Kmv, i) {\r\n\t        var data = Kmv.$data;\r\n\t        var elem = document.createElement(this.vdom.tagName);\r\n\t        var text = object_1.getDotVal(data, this.vdom.forObjectKey + \".\" + i);\r\n\t        var template = this.vdom.template;\r\n\t        var obj = object_1.depCopy(data);\r\n\t        obj[this.vdom.forKey] = text;\r\n\t        elem.innerText = template_1.compileTpl(template, obj);\r\n\t        for (var n = 0; n < this.vdom.children.length; n++) {\r\n\t            elem.appendChild(this.vdom.children[n].transDOM(data));\r\n\t        }\r\n\t        DomUtil.copyAttr(elem, this.vdom.attributes, Kmv);\r\n\t        DomUtil.inserBefore(this.vdom.nextSibling, elem);\r\n\t    };\r\n\t    ForDOM.prototype.popDOM = function () {\r\n\t        DomUtil.deleteNode(this.vdom.nextSibling.parentNode, this.vdom.nextSibling.previousSibling);\r\n\t    };\r\n\t    ForDOM.prototype.shiftDOM = function () {\r\n\t        DomUtil.deleteNode(this.vdom.previousSibling.parentNode, this.vdom.previousSibling.nextSibling);\r\n\t    };\r\n\t    ForDOM.prototype.changeText = function (data, i) {\r\n\t        var start = this.vdom.previousSibling;\r\n\t        var end = this.vdom.nextSibling;\r\n\t        var index = -1;\r\n\t        while (start != end && index < i) {\r\n\t            start = start.nextSibling;\r\n\t            index++;\r\n\t        }\r\n\t        var text = object_1.getDotVal(data, this.vdom.forObjectKey + \".\" + index);\r\n\t        DomUtil.changeNodeValue(start, text);\r\n\t    };\r\n\t    return ForDOM;\r\n\t}());\r\n\texports.ForDOM = ForDOM;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(12));\r\n\t__export(__webpack_require__(8));\r\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5b9cc5963ad795afdda1","import { renderInit } from './util/render'\r\nimport { observer } from './util/observer'\r\nimport { Watcher } from \"./util/watcher\"\r\n\r\nfunction Kmv(opts) {\r\n\r\n    let elSelector = opts['el'];\r\n    let elem = document.querySelector(elSelector);\r\n    let that = this;\r\n\r\n    this.data = opts.data;\r\n\r\n    this.flush = false;\r\n\r\n    this.watchers = new Watcher(elem);\r\n\r\n    this.$data = observer(opts.data, this);\r\n\r\n    this.methods = opts.methods;\r\n\r\n    // console.log(this.watchers);\r\n    setTimeout(function() {\r\n        renderInit(that);\r\n    }, 0);\r\n\r\n    return this;\r\n}\r\n\r\n(<any>window).Kmv = Kmv;\r\n\r\nexport default Kmv;\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","/**\r\n *   URL:\r\n *   说明:\r\n *   负责人: kelen\r\n *   日期:  1/24 0024.\r\n */\r\nexport const Attr = {\r\n    K_MODEL: 'k-model'\r\n}\r\n\r\nexport const RegexpStr = {\r\n    brace: /\\{\\{((?:.|\\n)+?)\\}\\}/,  // {{ name }}  大括号\r\n    forStatement: /([a-z_]+[\\w]*)\\s+in\\s+([a-z_][\\w.]+)/,\r\n    bracket: /\\[['|\"]?(\\w+)['|\"]?\\]/,   // 中括号\r\n    isString: /'([^']*)'|\"([^\\\"]*)\"/,\r\n    isParams: /^[^\"|^'\\d]+.*/,\r\n    arithmeticOp: /\\*|\\+|-\\//g,          // 逻辑运算符\r\n    inputElement: /INPUT|TEXTAREA/,\r\n    arrtibuteKey: /k-for|k-model|k-if|k:.*|k-on:(.*)/,\r\n    kAttribute: /k:(.*)/,\r\n    kOnAttribute: /k-on:(.*)/,\r\n    methodAndParam: /([a-zA-Z\\d_]+)\\((.*)\\)/\r\n}\r\n\r\nexport const NodeType = {\r\n    ELEMENT: 1,\r\n    ATTRIBUTE: 2,\r\n    TEXT: 3,\r\n    COMMENT: 8,\r\n    DOCUMENT: 9\r\n}\r\n\r\nexport const ArrayMethod = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'reverse']\r\n\r\nexport enum RenderType {\r\n    TEXT, INPUT, TEXTAREA, FOR, IF, ATTRIBUTE\r\n}\r\n\r\nexport enum ArrayOp {\r\n    PUSH, POP, SORT, CHANGE, SHIFT\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/constants/constant.ts","\r\nimport { RegexpStr } from '../constants/constant';\r\n\r\nexport let getDotVal = (obj, key) => {\r\n    let val, k;\r\n\r\n    if (key) {\r\n\r\n        key = key.replace(RegexpStr.bracket, \".$1\");\t\t// 把arr['name']/arr[\"name\"]/arr[0] 转为 arr.name/arr.0\r\n\r\n        val = obj;\r\n        // 获取对应的dot值\r\n        let arr = key.split(\".\") || [key];\r\n        while (k = arr.shift()) {\r\n            if (!val) {\r\n                val = undefined;\r\n                break;\r\n            }\r\n            val = val[k];\r\n        }\r\n\r\n    }\r\n\r\n    return val;\r\n}\r\n\r\nexport let depCopy = (obj) => {\r\n    let newObj = {};\r\n    for (let i in obj) {\r\n        if (typeof obj[i] === 'object') {\r\n            if (Array.isArray(obj[i])) {\r\n                newObj[i] = obj[i].slice(0);\r\n            } else {\r\n                newObj[i] = depCopy(obj[i]);\r\n            }\r\n        } else {\r\n            newObj[i] = obj[i];\r\n        }\r\n    }\r\n    return newObj;\r\n}\r\n\r\n\r\nexport let setObserveDotVal = (observeData, key, val) => {\r\n    key = key.replace(RegexpStr.bracket, \".$1\");\t\t// 把arr['name']/arr[\"name\"]/arr[0] 转为 arr.name/arr.0\r\n    let tmp = observeData;\r\n    let arr = key.split(\".\");\r\n    let len = arr.length;\r\n    for (let i = 0; i < len - 1; i++) {\r\n        tmp = tmp[arr[i]];\r\n    }\r\n\r\n    tmp[arr[len - 1]] = val;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/object.ts","import { RegexpStr } from '../constants/constant'\r\nimport { getDotVal } from './object'\r\nimport * as StringUtil from \"../util/string\"\r\nimport { ArithmeticOperateError } from '../util/error';\r\n/**\r\n *  转换逻辑操作运算结果\r\n *\r\n */\r\nexport let transArithmeticOp = (tpl, obj) => {\r\n\r\n    let opReg = RegexpStr.arithmeticOp;\r\n\r\n    let arr = tpl.split(opReg);   // 符号切分\r\n\r\n    let opRegArr = tpl.match(opReg);\r\n    let isParamReg = RegexpStr.isParams;\r\n\r\n    let tmp;\r\n    let newStr = '';\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n\r\n        tmp = arr[i].trim();\r\n\r\n        if (isParamReg.test(tmp)) {\r\n            // 如果是变量\r\n            let val = getDotVal(obj, tmp);\r\n            if (isNaN(val)) {       // 字符串\r\n                newStr += '\"' + val + '\"';\r\n            } else {\r\n                if (!val) val = 0;\r\n                newStr += val;\r\n            }\r\n        } else {\r\n            newStr += tmp;\r\n        }\r\n\r\n        if (i < arr.length - 1) {\r\n            newStr += opRegArr[i];\r\n        }\r\n    }\r\n    return eval(newStr);\r\n\r\n}\r\n\r\nexport let compileTpl = (tpl, obj) => {\r\n\r\n    let braceReg = RegexpStr.brace;\r\n\r\n    var regRes;\r\n    while (regRes = braceReg.exec(tpl)) {\r\n        let key = regRes ? regRes[1].trim() : '';\t// 获取括号的键\r\n        let opReg = RegexpStr.arithmeticOp;     // 是否有操作符\r\n        let text = '';\r\n        if (opReg.test(key)) {\r\n            text = transArithmeticOp(key, obj)\r\n        } else {\r\n            text = getDotVal(obj, key);\r\n        }\r\n        tpl = tpl.replace(braceReg, text);\r\n    }\r\n    return tpl;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/template.ts","/**\r\n * Created by kelen on 2017/2/6.\r\n */\r\nimport { RegexpStr } from '../constants/constant'\r\nimport { compileTpl } from '../util/template'\r\nimport { isKvmAttribute } from '../util/validator'\r\nimport { bindEvent } from \"./event\";\r\n\r\nexport let insertAfter = (node, newNode) => {\r\n    node && node.parentNode && node.parentNode.insertBefore(newNode, node.nextSibling);\r\n}\r\n\r\nexport let inserBefore = (node, newNode) => {\r\n    node && node.parentNode && node.parentNode.insertBefore(newNode, node);\r\n}\r\n\r\nexport let deleteNode = (parent, node) => {\r\n    parent && node && parent.removeChild(node);\r\n}\r\n\r\nexport let changeNodeValue = (node, text) => {\r\n    node && node.firstChild && (node.firstChild.nodeValue = text);\r\n}\r\n\r\nexport let removeAttribute = (node, attr) => {\r\n    node.removeAttribute(attr);\r\n}\r\n\r\nexport let findIteratorNode = (parentNode, key) => {\r\n    let childrens = parentNode.childNodes;\r\n    let iteratorNodes = [];\r\n    for (let i = 0; i < childrens.length; i++) {\r\n        let node = childrens[i];\r\n        if (node.forString && node.forKey && node.forKey == key) {\r\n            iteratorNodes.push(node);\r\n        }\r\n        if (node.childNodes.length) {\r\n            iteratorNodes.concat(findIteratorNode(node, key));\r\n        }\r\n    }\r\n    return iteratorNodes;\r\n}\r\n\r\nexport let hideNode = (node) => {\r\n    node.style.display = \"none\";\r\n}\r\n\r\nexport let showNode = (node) => {\r\n    node.style.display = \"block\";\r\n}\r\n\r\nexport let copyAttr = (node, attribute, Kmv) => {\r\n\r\n    let data = Kmv.$data;\r\n\r\n    for (let i = 0; i < attribute.length; i++) {\r\n        let attr = attribute[i];\r\n        let attrName = attr.nodeName, attrVal = attr.nodeValue;\r\n\r\n        if (isKvmAttribute(attrName, attrVal)) {\r\n            if (RegexpStr.kAttribute.test(attrName)) {\r\n                let key = attr.nodeName.replace(RegexpStr.kAttribute, '$1');\r\n                let val = compileTpl(attrVal, data);\r\n                node.setAttribute(key, val);\r\n                node.removeAttribute(attrName);\r\n            } else if (RegexpStr.kOnAttribute.test(attrName)) {\r\n                let event = attrName.replace(RegexpStr.kOnAttribute, '$1');\r\n                let func = compileTpl(attrVal, data);\r\n                let match = func.match(RegexpStr.methodAndParam);\r\n                let method = match[1];\r\n                let params = match[2];\r\n                bindEvent(node, event, method, params, Kmv.methods, Kmv.data);\r\n                node.removeAttribute(attrName);\r\n            }\r\n        } else {\r\n            node.setAttribute(attrName, attrVal);\r\n        }\r\n    }\r\n}\r\n\r\n// 新增元素, last最后添加\r\nexport let insertNodeByIndex = (node, index, text) => {\r\n\r\n    let tagName = node.tagName;\r\n    let idx = 0; \t\t// 第一个下标开始\r\n    let groupId = node.groupId;\r\n    let attrs = node.attributes;\r\n    let template = node.template;\r\n\r\n    if (index == 0) {\r\n        node.innerText = text;\r\n        node.style.display = \"\";\r\n    } else {\r\n        while (idx < index - 1 && node) {\r\n            if (node.nextSibling && node.nextSibling.groupId == groupId) {\r\n                idx ++;\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        let newNode = document.createElement(tagName);\r\n        newNode.groupId = groupId;\r\n        newNode.template = template;\r\n        newNode.innerText = text;\r\n        // 父属性\r\n        for (let i = 0; i < attrs.length; i++) {\r\n            let kv = attrs[i];\r\n            switch (kv.name) {\r\n                default:\r\n                    newNode.setAttribute(kv.name, kv.nodeValue);\r\n            }\r\n        }\r\n        insertAfter(node, newNode);\r\n    }\r\n\r\n}\r\n\r\nexport let removeNodeByIndex = (node, index) => {\r\n    var tagName = node.tagName;\r\n    var idx = 0;\r\n    var groupId = node.groupId;\r\n    // 当下标为1时，重新选举标准\r\n    if (index == 0) {\r\n        if (node.nextSibling.groupId == groupId) {\r\n            node.nextSibling['forKey'] = node.forKey;\r\n            node.nextSibling['forString'] = node.forString;\r\n            node.parentNode.removeChild(node);\r\n        } else {\r\n            node.style.display = 'none';\r\n            node.innerText = '';\r\n        }\r\n    } else {\r\n        while (idx < index && node) {\r\n            if (node.nextSibling && node.groupId == groupId) {\r\n                idx ++;\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        node && node.parentNode.removeChild(node);\r\n    }\r\n}\r\n\r\nexport let replaceNodeByIndex = (node, index, text) => {\r\n    var idx = 0;\r\n    var groupId = node.groupId;\r\n    while (idx < index && node) {\r\n        if (node.nextSibling && node.nextSibling.groupId == groupId) {\r\n            idx ++;\r\n        }\r\n        node = node.nextSibling;\r\n    }\r\n    if (node) {\r\n        node.innerText = text;\r\n    } else {\r\n\r\n    }\r\n}\r\n\r\nexport let removeNode = (node) => {\r\n    node && node.parentNode.removeChild(node);\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dom/domOp.ts","export let bindEvent = (node, event, method, param = '', methodsObj, observeData) => {\r\n\r\n    if (node.addEventListener) {\r\n        node.addEventListener(event, function() {\r\n            let params = param.split(',');\r\n            methodsObj[method].apply(observeData, params);\r\n        });\r\n    } else {\r\n        node.attachEvent(\"on\" + event, function() {\r\n            let params = param.split(',');\r\n            methodsObj[method].apply(observeData, params);\r\n        })\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/dom/event.ts","import { compileTpl } from '../util/template'\r\nimport { NodeType, RegexpStr, RenderType } from '../constants/constant'\r\nimport { getDotVal, depCopy, setObserveDotVal } from './object'\r\nimport {diff} from \"./array\";\r\nimport * as DomUtil from '../dom/domOp'\r\nimport { bindEvent } from '../dom/event'\r\n\r\nexport let renderInit = (Kmv) => {\r\n\r\n    let watcher = Kmv.watchers;\r\n    let data = Kmv.$data;\r\n    let observeData = Kmv.data;\r\n\r\n    let renderQueue = watcher.getQueue();\r\n    for (let i = 0; i < renderQueue.length; i++) {\r\n        let node = renderQueue[i];\r\n        switch (node.renderType) {\r\n            case RenderType.TEXT:\r\n                let template = node.template;\r\n                let text = compileTpl(template, data);\r\n                node.nodeValue = text;\r\n                break;\r\n            case RenderType.INPUT:\r\n                let kModel = node.getAttribute(\"k-model\");\r\n                node.value = getDotVal(data, kModel);\r\n                node.oninput = function() {\r\n                    setObserveDotVal(observeData, kModel, this.value);\r\n                }\r\n                break;\r\n            case RenderType.FOR:\r\n                node.renderInit(Kmv);\r\n                break;\r\n            case RenderType.IF:\r\n                let kIf = node.getAttribute(\"k-if\");\r\n                let val = getDotVal(data, kIf);\r\n                if (val) {\r\n                    DomUtil.showNode(node);\r\n                } else {\r\n                    DomUtil.hideNode(node);\r\n                }\r\n                node.kIf = kIf;\r\n                break;\r\n            case RenderType.ATTRIBUTE:\r\n                let nAttr = node.nAttr;\r\n                let kAttr = node.kAttr;\r\n                let kOn = node.kOn;\r\n                for (let i = 0; i < kAttr.length; i++) {\r\n                    // k属性\r\n                    let attr = kAttr[i].kAttr.replace(RegexpStr.kAttribute, '$1');\r\n                    let val = compileTpl(kAttr[i].kAttrVal, data);\r\n                    node.setAttribute(attr, val);\r\n                }\r\n                for (let i = 0; i < kOn.length; i++) {\r\n                    // k-on事件\r\n                    let event = kOn[i].kEvent.replace(RegexpStr.kOnAttribute, '$1');\r\n                    let func = compileTpl(kOn[i].kFunc, data);\r\n                    let match = func.match(RegexpStr.methodAndParam);\r\n                    if (match) {\r\n                        // 有参数 k-on:click = say() 或者 k-on:click = say('hello')\r\n                        let method = match[1];\r\n                        let params = match[2];\r\n                        bindEvent(node, event, method, params, Kmv.methods, Kmv.data);\r\n                    } else {\r\n                        bindEvent(node, event, func, '', Kmv.methods, Kmv.data);\r\n                    }\r\n                    DomUtil.removeAttribute(node, kOn[i].kEvent);\r\n                }\r\n                for (let i = 0; i < nAttr.length; i++) {\r\n                    // k属性\r\n                    let attr = nAttr[i].nAttr.replace(RegexpStr.kAttribute, '$1');\r\n                    let val = compileTpl(nAttr[i].nAttrVal, data);\r\n                    node.setAttribute(attr, val);\r\n                }\r\n                break;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport let reRender = (kmv, key) => {\r\n    let renderQueue = kmv.watchers.getQueue();\r\n    let data = kmv.$data;\r\n    for (let i = 0; i < renderQueue.length; i++) {\r\n        let node = renderQueue[i];\r\n        switch (node.renderType) {\r\n            case RenderType.TEXT:\r\n                let template = node.template;\r\n                node.nodeValue = compileTpl(template, data);\r\n                break;\r\n            case RenderType.FOR:\r\n                node.reRenderList(kmv);\r\n                break;\r\n            case RenderType.IF:\r\n                let kIf = node.kIf;\r\n                let val = getDotVal(data, kIf);\r\n                if (val) {\r\n                    DomUtil.showNode(node);\r\n                } else {\r\n                    DomUtil.hideNode(node);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nexport let reRenderFor = (kmv, forKey) => {\r\n    let renderQueue = kmv.watchers.getQueue();\r\n    let data = kmv.$data;\r\n    for (let i = 0; i < renderQueue.length; i++) {\r\n        let node = renderQueue[i];\r\n        if (node.renderType == RenderType.FOR) {\r\n            let vdom = node.vdom;\r\n            let arrKey = vdom.forObjectKey;\r\n            let newArray = getDotVal(data, arrKey);\r\n            let change = diff(vdom.arrayData, newArray);\r\n            node.reRender(change, kmv);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/render.ts","import { RegexpStr } from '../constants/constant'\r\n\r\nlet isBraceReg = (str: string) => {\r\n    return RegexpStr.brace.test(str);\r\n}\r\n\r\n/**\r\n *  是否有包含语法\r\n * @param str\r\n */\r\nlet isForStatement = (str: string) => {\r\n    return RegexpStr.forStatement.test(str);\r\n}\r\n\r\nlet validator =  {\r\n    isBraceReg: isBraceReg,\r\n    isForStatement: isForStatement\r\n}\r\n\r\nexport let isKvmAttribute = (key, val) => {\r\n    return RegexpStr.arrtibuteKey.test(key) || RegexpStr.brace.test(val);\r\n}\r\n\r\nexport default validator;\n\n\n// WEBPACK FOOTER //\n// ./src/util/validator.ts","import { compileTpl } from '../util/template'\r\nimport { copyAttr } from '../dom/domOp'\r\n\r\nexport class NormalDOM {\r\n    vdom;\r\n    methods;\r\n    constructor (node) {\r\n        // h3\r\n        this.vdom = {\r\n            tagName: node.tagName,\r\n            template: node.firstChild.nodeValue,\r\n            attributes: node.attributes\r\n        }\r\n    }\r\n    transDOM(Kmv) {\r\n        let data = Kmv.$data;\r\n        let newEle = document.createElement(this.vdom.tagName);\r\n        newEle.template = this.vdom.template;\r\n        let text = compileTpl(this.vdom.template, data);\r\n        newEle.innerText = text;\r\n        copyAttr(newEle, this.vdom.attributes, Kmv);\r\n        return newEle;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/vdom/NormalDOM.ts","import { ArrayOp } from \"../constants/constant\"\r\n\r\nexport let diff = (arr1, arr2) => {\r\n\r\n    let change = [];\r\n    let len1 = arr1.length, len2 = arr2.length;\r\n    let len = Math.min(len1, len2);\r\n    for (let i = 0; i < len; i++) {\r\n        if (arr1[i] !== arr2[i]) {\r\n            change.push({\r\n                op: ArrayOp.CHANGE,\r\n                index: i,\r\n                text: arr2[i]\r\n            })\r\n        }\r\n    }\r\n    if (len1 > len2) {\r\n        let deleteArr = arr1.slice(len2);\r\n        for (let i = 0; i < deleteArr.length; i++) {\r\n            change.push({\r\n                op: ArrayOp.POP,\r\n                index: i + len2,\r\n                text: deleteArr[i]\r\n            })\r\n        }\r\n    } else {\r\n        let addArr = arr2.slice(len1);\r\n        for (let i = 0; i < addArr.length; i++) {\r\n            change.push({\r\n                op: ArrayOp.PUSH,\r\n                index: i + len,\r\n                text: addArr[i]\r\n            })\r\n        }\r\n    }\r\n    return change;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/array.ts","import * as ObjectUtil from '../util/object'\r\nimport { reRender, reRenderFor } from \"./render\";\r\nimport { ArrayMethod } from '../constants/constant'\r\nimport * as DomUtil from '../dom/domOp'\r\nimport {compileTpl} from \"./template\";\r\nimport {getDotVal} from \"./object\";\r\n/**\r\n *   URL:\r\n *   说明:\r\n *   负责人: kelen\r\n *   日期:  1/24 0024.\r\n */\r\nexport let observer = (obj, kmv, key = '') => {\r\n    let newObj = ObjectUtil.depCopy(obj);\r\n    for (let i in obj) {\r\n        let bigKey = key ? key + \".\" + i : i;\r\n        if (typeof obj[i] == 'object') {\r\n            if (Array.isArray(obj[i])) {\r\n                arrayObserve(obj[i], kmv, bigKey);\r\n            } else {\r\n                observer(obj[i], kmv, bigKey);\r\n            }\r\n        } else {\r\n            Object.defineProperty(obj, i, {\r\n                set: function (newVal) {\r\n                    ObjectUtil.setObserveDotVal(kmv.$data, bigKey, newVal);\r\n                    reRender(kmv, i);\r\n                },\r\n                get: function() {\r\n                    return getDotVal(kmv.$data, bigKey);\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return newObj;\r\n}\r\n\r\nfunction arrayObserve(arr, kmv, bigKey) {\r\n\r\n    let timer;\r\n\r\n    // 监听array操作\r\n    ArrayMethod.forEach((method) => {\r\n        Object.defineProperty(arr, method, {\r\n            configurable: false,\r\n            enumerable: false, // hide from for...in\r\n            writable: false,\r\n            value: function () {\r\n                Array.prototype[method].apply(getDotVal(kmv.$data, bigKey), arguments);\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = setTimeout(function () {\r\n                    reRenderFor(kmv, bigKey)\r\n                }, 10)\r\n            }\r\n        });\r\n    })\r\n\r\n\r\n\r\n    /*arr.push = function() {\r\n        Array.prototype.push.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n        }\r\n        timer = setTimeout(function () {\r\n            reRenderFor(kmv, bigKey)\r\n        }, 10)\r\n    }\r\n\r\n    arr.pop = function () {\r\n        Array.prototype.pop.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n        }\r\n        timer = setTimeout(function () {\r\n            reRenderFor(kmv, bigKey)\r\n        }, 10)\r\n    }\r\n\r\n    arr.shift = function () {\r\n        Array.prototype.shift.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n        }\r\n        timer = setTimeout(function () {\r\n            reRenderFor(kmv, bigKey);\r\n        }, 10)\r\n    }\r\n\r\n    arr.unshift = function () {\r\n        Array.prototype.unshift.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n        }\r\n        timer = setTimeout(function () {\r\n            reRenderFor(kmv, bigKey)\r\n        }, 10)\r\n    }\r\n\r\n    arr.splice = function () {\r\n        Array.prototype.splice.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n        }\r\n        timer = setTimeout(function () {\r\n            reRenderFor(kmv, bigKey)\r\n        }, 10)\r\n    }\r\n\r\n    arr.sort =function () {\r\n        Array.prototype.sort.apply(getDotVal(kmv.$data, bigKey), arguments);\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n        }\r\n        timer = setTimeout(function () {\r\n            reRenderFor(kmv, bigKey)\r\n        }, 10)\r\n    };*/\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/observer.ts","import { NodeType, RegexpStr, RenderType } from '../constants/constant'\r\nimport { isKvmAttribute } from './validator'\r\nimport * as VirtualDOM from \"../vdom/vdom\"\r\n\r\nexport class Watcher {\r\n    queue = [];\r\n    constructor(node) {\r\n        this.queue = this.queueInit(node);\r\n    }\r\n    getQueue() {\r\n        return this.queue;\r\n    }\r\n    queueInit (node) {\r\n        let childNodes = node.childNodes;\r\n        for (let i = 0; i < childNodes.length; i++) {\r\n            let child = childNodes[i];\r\n            switch (child.nodeType) {\r\n                case NodeType.TEXT:\r\n                    let nodeValue = child.nodeValue;\r\n                    if (RegexpStr.brace.test(nodeValue)) {\r\n                        child.renderType = RenderType.TEXT;\r\n                        child.template = nodeValue;\r\n                        this.queue.push(child);\r\n                    }\r\n                    break;\r\n                case NodeType.ELEMENT:\r\n                    if (child.getAttribute(\"k-for\")) {\r\n                        // 转为虚拟dom\r\n                        let vdom = new VirtualDOM.ForDOM(child);\r\n                        vdom.renderType = RenderType.FOR;\r\n                        this.queue.push(vdom);\r\n                        child.parentNode.removeChild(child);    // 移除自身元素\r\n                    } else if (child.getAttribute(\"k-if\")) {\r\n                        child.renderType = RenderType.IF;\r\n                        this.queue.push(child);\r\n                    } else if (child.getAttribute(\"k-model\")) {\r\n                        let attrs = child.attributes;\r\n                        for (let n = 0; n < attrs.length; n++) {\r\n                            let attr = attrs[n];\r\n                            if (isKvmAttribute(attr.nodeName, attr.nodeValue)) {\r\n                                child.renderType = RenderType.INPUT;\r\n                                this.queue.push(child);\r\n                                break;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        let attrs = child.attributes;\r\n                        child.nAttr = [];           // 常规属性\r\n                        child.kAttr = [];           // k属性\r\n                        child.kOn = [];           // k-on属性\r\n                        for (let n = 0; n < attrs.length; n++) {\r\n                            let attr = attrs[n];\r\n                            if (isKvmAttribute(attr.nodeName, attr.nodeValue)) {\r\n                                child.renderType = RenderType.ATTRIBUTE;\r\n                                if (RegexpStr.kAttribute.test(attr.nodeName)) {\r\n                                    child.kAttr.push({\r\n                                        kAttr: attr.nodeName,\r\n                                        kAttrVal: attr.nodeValue\r\n                                    })\r\n                                    child.removeAttribute(attr.nodeName);\r\n                                } else if (RegexpStr.kOnAttribute.test(attr.nodeName)) {\r\n                                    child.kOn.push({\r\n                                        kEvent: attr.nodeName,\r\n                                        kFunc: attr.nodeValue\r\n                                    })\r\n                                } else {\r\n                                    //\r\n                                    child.nAttr.push({\r\n                                        nAttr: attr.nodeName,\r\n                                        nAttrVal: attr.nodeValue\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                        if (child.renderType === RenderType.ATTRIBUTE) this.queue.push(child);\r\n                    }\r\n\r\n                    break;\r\n            }\r\n            if (child.childNodes.length) {\r\n                this.queue.concat(this.queueInit(child));\r\n            }\r\n        }\r\n        return this.queue;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/watcher.ts","import * as DomUtil from \"../dom/domOp\"\r\nimport { getDotVal, depCopy } from '../util/object'\r\nimport { compileTpl } from '../util/template'\r\nimport { RegexpStr } from '../constants/constant'\r\nimport { ArrayOp } from \"../constants/constant\"\r\nimport { NormalDOM } from './NormalDOM'\r\n\r\nexport class ForDOM {\r\n    renderType;\r\n    vdom;\r\n    methods;\r\n    constructor (node) {\r\n        let forString = node.getAttribute(\"k-for\");\r\n        let match = RegexpStr.forStatement.exec(forString);\r\n        let template = node.firstChild && node.firstChild.nodeValue;\r\n        this.vdom = {\r\n            tagName: node.tagName,\r\n            forString: forString,\r\n            forObjectKey: match[2].trim(),\r\n            forKey: match[1].trim(),\r\n            template: template,\r\n            previousSibling: node.previousSibling,\r\n            nextSibling: node.nextSibling,\r\n            documentFragment: null,\r\n            children: [],\r\n            arrayData: [],\r\n            attributes: node.attributes\r\n        }\r\n        this.vdom.attributes.removeNamedItem(\"k-for\");\r\n        if (node.children) {\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                let virtualDOM = new NormalDOM(node.children[i]);\r\n                this.vdom.children.push(virtualDOM)\r\n            }\r\n        }\r\n        this.connect(node.previousElementSibling, node.nextElementSibling)\r\n    }\r\n    getVdom () {\r\n        return this.vdom;\r\n    }\r\n    renderInit(Kmv) {\r\n        let data = Kmv.$data\r\n        var tagName = this.vdom.tagName;\r\n        var template = this.vdom.template;\r\n        let arrKey = this.vdom.forObjectKey;\r\n        let arrayData = getDotVal(data, arrKey);\r\n        var docFrag = document.createDocumentFragment();\r\n        let obj = depCopy(data);\r\n        for (let i = 0; i < arrayData.length; i++) {\r\n            let newDom = document.createElement(tagName);\r\n            let text = getDotVal(data, this.vdom.forObjectKey + \".\" + i);\r\n            obj[this.vdom.forKey] = text;\r\n            newDom.innerText = compileTpl(template, obj);\r\n            for (let n = 0; n < this.vdom.children.length; n++) {\r\n                newDom.appendChild(this.vdom.children[n].transDOM(Kmv));\r\n            }\r\n            DomUtil.copyAttr(newDom, this.vdom.attributes, Kmv);\r\n            docFrag.appendChild(newDom);\r\n        }\r\n        DomUtil.insertAfter(this.vdom.previousSibling, docFrag);\r\n        this.vdom.arrayData = arrayData.slice(0);\r\n    }\r\n    connect (realPrevDom, realNextDom) {\r\n        realPrevDom && (realPrevDom.$nextSibling = this.vdom);\r\n        this.vdom.$nextSibling = realNextDom;\r\n    }\r\n    reRender (change, Kmv) {\r\n        let data = Kmv.$data;\r\n        for (let i = 0; i < change.length; i++) {\r\n            var op = change[i].op;\r\n            switch (op) {\r\n                case ArrayOp.PUSH:\r\n                    this.pushDOM(Kmv, change[i].index);\r\n                    break;\r\n                case ArrayOp.POP:\r\n                    this.popDOM();\r\n                    break;\r\n                case ArrayOp.CHANGE:\r\n                    let obj = depCopy(data);        // 拷贝一份对象\r\n                    this.changeText(obj, change[i].index)\r\n                    break\r\n                case ArrayOp.SHIFT:\r\n                    this.shiftDOM();\r\n                    break;\r\n            }\r\n        }\r\n        let arrKey = this.vdom.forObjectKey;\r\n        let arrayData = getDotVal(data, arrKey);\r\n        this.vdom.arrayData = arrayData.slice(0);\r\n    }\r\n    reRenderList (Kmv) {\r\n        let data = Kmv.$data;\r\n        let start = this.vdom.previousSibling;\r\n        let end = this.vdom.nextSibling;\r\n        let index = 0;\r\n        let obj = depCopy(data);\r\n        var template = this.vdom.template;\r\n        while (start !== end) {\r\n            start = start.nextSibling\r\n            let text = getDotVal(data, this.vdom.forObjectKey + \".\" + index);\r\n            obj[this.vdom.forKey] = text;\r\n            text = compileTpl(template, obj);\r\n            DomUtil.changeNodeValue(start, text);\r\n            let childrens = start.children || [];\r\n            for (let i = 0; i < childrens.length; i++) {\r\n                this.reRenderChild(childrens[i], data);\r\n            }\r\n            index ++;\r\n        }\r\n    }\r\n    reRenderChild (node, data) {\r\n        let template = node.template;\r\n        node.firstChild.nodeValue = compileTpl(template, data);\r\n    }\r\n    pushDOM(Kmv, i) {\r\n        let data = Kmv.$data;\r\n        let elem = document.createElement(this.vdom.tagName);\r\n        let text = getDotVal(data, this.vdom.forObjectKey + \".\" + i);\r\n        let template = this.vdom.template;\r\n        let obj = depCopy(data);\r\n        obj[this.vdom.forKey] = text;\r\n        elem.innerText = compileTpl(template, obj);\r\n        for (let n = 0; n < this.vdom.children.length; n++) {\r\n            elem.appendChild(this.vdom.children[n].transDOM(data));\r\n        }\r\n        DomUtil.copyAttr(elem, this.vdom.attributes, Kmv);\r\n        DomUtil.inserBefore(this.vdom.nextSibling, elem);\r\n    }\r\n    popDOM() {\r\n        DomUtil.deleteNode(this.vdom.nextSibling.parentNode, this.vdom.nextSibling.previousSibling);\r\n    }\r\n    shiftDOM() {\r\n        DomUtil.deleteNode(this.vdom.previousSibling.parentNode, this.vdom.previousSibling.nextSibling);\r\n    }\r\n    changeText(data, i) {\r\n        let start = this.vdom.previousSibling;\r\n        let end = this.vdom.nextSibling;\r\n        let index = -1;\r\n        while (start != end && index < i) {\r\n            start = start.nextSibling;\r\n            index++;\r\n        }\r\n        let text = getDotVal(data, this.vdom.forObjectKey + \".\" + index);\r\n        DomUtil.changeNodeValue(start, text);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/vdom/ForDOM.ts","export * from './ForDOM';\r\nexport * from './NormalDOM'\n\n\n// WEBPACK FOOTER //\n// ./src/vdom/vdom.ts"],"sourceRoot":""}