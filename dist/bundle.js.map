{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants/constant.ts","webpack:///./src/util/object.ts","webpack:///./src/dom/domOp.ts","webpack:///./src/vdom/VDOM.ts","webpack:///./src/vdom/InputDOM.ts","webpack:///./src/util/validator.ts","webpack:///./src/vdom/ForDOM.ts","webpack:///./src/vdom/ComponentDOM.ts","webpack:///./src/util/template.ts","webpack:///./src/vdom/NormalDOM.ts","webpack:///./src/util/array.ts","webpack:///./src/core/observer.ts","webpack:///./src/util/event.ts","webpack:///./src/dom/event.ts","webpack:///./src/util/function.ts","webpack:///./src/vdom/ForNormalDOM.ts","webpack:///./src/vdom/ForItemDOM.ts","webpack:///./src/core/RenderQueue.ts","webpack:///./src/util/render.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Attr","K_MODEL","RegexpStr","brace","forStatement","bracket","isString","isParams","arithmeticOp","inputElement","arrtibuteKey","kAttribute","kOnAttribute","methodAndParam","isTernaryOp","ternaryOpSplit","isNormalHtmlTag","isProps","NodeType","ELEMENT","ATTRIBUTE","TEXT","COMMENT","DOCUMENT","ArrayMethod","RenderType","ArrayOp","constant_1","array_1","getDotVal","obj","key","val","k","arr","replace","split","shift","undefined","depCopy","newObj","Array","isArray","depCopyArray","setObserveDotVal","observeData","tmp","len","length","extend","srcObj","extObj","isNull","res","keys","insertAfter","node","newNode","parentNode","insertBefore","nextSibling","appendChild","parent","child","createTextNode","text","document","createComment","replaceNode","oldNode","replaceChild","createElement","tagName","deleteNode","removeChild","changeNodeValue","firstChild","nodeValue","changeTextContent","textNode","textContent","getTextContent","removeAttribute","attr","findIteratorNode","childrens","childNodes","iteratorNodes","forString","forKey","push","concat","hideNode","style","display","showNode","removeNode","template_1","domOp_1","validator_1","event_1","object_1","DomOp","object_2","VDOM","kmv","this","childrenVdom","isComponent","$emptyComment","attributes","slice","nodeType","kshow","getAttribute","kif","renderAttr","data","component","$dom","attrs","attrName","nodeName","attrVal","test","valRes","ak","trim","setAttribute","compileTpl","event_2","match","method","paramsArr","String","bindEvent","methods","$data","isShow","reRenderAttr","isKvmAttribute","newVal","InputDOM","_super","_this","kmodel","__extends","renderInit","oninput","ev","reRender","isBraceReg","str","isForStatement","isUnknowElement","tag","el","indexOf","constructor","window","HTMLUnknownElement","HTMLElement","toString","ForItemDOM_1","ForDOM","parentComponent","templateNode","isList","exec","forObjectKey","srcData","iteratorData","docFrag","transDOM","insertNewDOM","createDocumentFragment","iteratorObj","create","forItem","ForItemDOM","cloneNode","forItemDom","arrKey","newDatas","change","diff","notifyDataChange","idx","op","batch","PUSH","batchAdd","array","addNewItem","POP","popItem","CHANGE","changeItem","index","SHIFT","shiftItem","newItem","newDom","popVdom","pop","newArray","shiftVdom","NormalDOM_1","VDOM_1","ForDOM_1","observer_1","InputDOM_1","ComponentDOM","components","toLowerCase","div","innerHTML","template","model","parentData","observer","NormalDOM","console","error","forEach","getRealDOM","replaceDOM","function_1","transArithmeticOp","tpl","opReg","opRegArr","isParamReg","newStr","isNaN","eval","transTernaryOperator","item","_data","regRes","braceReg","evalJs","ComponentDOM_1","arr1","arr2","len1","len2","Math","min","deleteArr","addArr","JSON","parse","stringify","bigKey","defVal","set","pendingValue","changeQueue","watch","writable","apply","arguments","arrayObserve","Event","eventObject","$on","event","fn","once","$once","$emit","params","thisEvent","methodsObj","addEventListener","attachEvent","content","Function","err","evalFunc","code","ForNormalDOM","newEle","previousSibling","ForNormalDOM_1","componentInstance","newElem","RenderQueue","queue","queueInit","getQueue","renderQueue","nextTick","setTimeout","lastOne","nextTickHandler","render_1","RenderQueue_1","Kmv","opts","elSelector","elem","querySelector","mounted","that","beforeInit","allData","config"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","/**\r\n *   URL:\r\n *   说明:\r\n *   负责人: kelen\r\n *   日期:  1/24 0024.\r\n */\r\nexport const Attr = {\r\n    K_MODEL: 'k-model'\r\n}\r\n\r\nexport const RegexpStr = {\r\n    brace: /\\{\\{((?:.|\\n)+?)\\}\\}/,  // {{ name }}  大括号\r\n    forStatement: /([a-z_]+[\\w]*)\\s+in\\s+([a-z_][\\w.]+(\\[.*\\])*)/,\r\n    bracket: /\\[['|\"]?(\\w+)['|\"]?\\]/,   // 中括号\r\n    isString: /'([^']*)'|\"([^\\\"]*)\"/,\r\n    isParams: /^[^\"|^'\\d]+.*/,\r\n    arithmeticOp: /\\*|\\+|-\\/|\\(|\\)/g,          // 逻辑运算符\r\n    inputElement: /INPUT|TEXTAREA/,\r\n    arrtibuteKey: /k-for|k-model|k-if|k:.*|k-on:(.*)|k-show/,\r\n    kAttribute: /k:(.*)/,\r\n    kOnAttribute: /k-on:(.*)/,\r\n    methodAndParam: /([a-zA-Z\\d_]+)\\((.*)\\)/,\r\n    isTernaryOp: /!.*|!!.*|.+?.+:.+/,\r\n    ternaryOpSplit: /\\?|:|\\(|\\)|!!/,        // 正则切割\r\n    isNormalHtmlTag: /html|body|base|head|link|meta|style|title|address|article|aside|footer|header|h1|h2|h3|h4|h5|h6|hgroup|nav|section|div|dd|dl|dt|figcaption|figure|hr|img|li|main|ol|p|pre|ul|a|b|abbr|bdi|bdo|br|cite|code|data|dfn|em|i|kbd|mark|q|rp|rt|rtc|ruby|s|samp|small|span|strong|sub|sup|time|u|var|wbr|area|audio|map|track|video|embed|object|param|source|canvas|script|noscript|del|ins|caption|col|colgroup|table|thead|tbody|td|th|tr|button|datalist|fieldset|form|input|label|legend|meter|optgroup|option|output|progress|select|textarea|details|dialog|menu|menuitem|summary|content|element|shadow|template/i,\r\n    isProps: /:(.*)/\r\n}\r\n\r\nexport const NodeType = {\r\n    ELEMENT: 1,\r\n    ATTRIBUTE: 2,\r\n    TEXT: 3,\r\n    COMMENT: 8,\r\n    DOCUMENT: 9\r\n}\r\n\r\nexport const ArrayMethod = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'reverse']\r\n\r\nexport enum RenderType {\r\n    TEXT, INPUT, TEXTAREA, FOR, IF, ATTRIBUTE\r\n}\r\n\r\nexport enum ArrayOp {\r\n    PUSH, POP, SORT, CHANGE, SHIFT\r\n}","\r\nimport { RegexpStr } from '../constants/constant';\r\nimport { depCopyArray } from \"./array\";\r\n\r\nlet getDotVal = (obj, key) => {\r\n    let val, k;\r\n    if (key) {\r\n        key = key.replace(RegexpStr.bracket, \".$1\");\t\t// 把arr['name']/arr[\"name\"]/arr[0] 转为 arr.name/arr.0\r\n        val = obj;\r\n        // 获取对应的dot值\r\n        let arr = key.split(\".\") || [key];\r\n        while (k = arr.shift()) {\r\n            if (!val) {\r\n                val = undefined;\r\n                break;\r\n            }\r\n            val = val[k];\r\n        }\r\n    }\r\n    return val;\r\n}\r\n\r\nlet depCopy = (obj) => {\r\n    let newObj = {};\r\n    for (let i in obj) {\r\n        if (typeof obj[i] === 'object') {\r\n            if (Array.isArray(obj[i])) {\r\n                newObj[i] = depCopyArray(obj[i]);\r\n            } else {\r\n                newObj[i] = depCopy(obj[i]);\r\n            }\r\n        } else {\r\n            newObj[i] = obj[i];\r\n        }\r\n    }\r\n    return newObj;\r\n}\r\n\r\n\r\nlet setObserveDotVal = (observeData, key, val) => {\r\n    key = key.replace(RegexpStr.bracket, \".$1\");\t\t// 把arr['name']/arr[\"name\"]/arr[0] 转为 arr.name/arr.0\r\n    let tmp = observeData;\r\n    let arr = key.split(\".\");\r\n    let len = arr.length;\r\n    for (let i = 0; i < len - 1; i++) {\r\n        tmp = tmp[arr[i]];\r\n    }\r\n    tmp[arr[len - 1]] = val;\r\n}\r\n\r\nlet extend = (srcObj = {}, extObj) => {\r\n    for (let i in extObj) {\r\n        srcObj[i] = extObj[i];\r\n    }\r\n    return srcObj;\r\n}\r\n\r\nlet isNull = (obj) => {\r\n    let res;\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i) && !obj[i]) {\r\n            res = true;\r\n        }\r\n    }\r\n    return !res || obj == null || Object.keys(obj).length === 0;\r\n}\r\n\r\nexport { extend, isNull, setObserveDotVal, depCopy, getDotVal }","/**\r\n * Created by kelen on 2017/2/6.\r\n */\r\nimport { RegexpStr } from '../constants/constant'\r\nimport { compileTpl } from '../util/template'\r\nimport { isKvmAttribute } from '../util/validator'\r\nimport { bindEvent } from \"./event\";\r\n\r\nexport let insertAfter = (node, newNode) => {\r\n    node && node.parentNode && node.parentNode.insertBefore(newNode, node.nextSibling);\r\n}\r\n\r\nexport let appendChild = (parent, child) => {\r\n    parent && child && (parent.appendChild(child));\r\n}\r\n\r\nexport let createTextNode = (text) => {\r\n    return document.createTextNode(text);\r\n}\r\n\r\nexport let createComment = (text) => {\r\n    return document.createComment(text);\r\n}\r\n\r\nexport let replaceNode = (oldNode, newNode) => {\r\n    oldNode.parentNode && oldNode.parentNode.replaceChild(newNode, oldNode);\r\n}\r\n\r\nexport let createElement = (tagName) => {\r\n    return document.createElement(tagName);\r\n}\r\n\r\nexport let insertBefore = (node, newNode) => {\r\n    node && node.parentNode && node.parentNode.insertBefore(newNode, node);\r\n}\r\n\r\nexport let deleteNode = (parent, node) => {\r\n    parent && node && parent.removeChild(node);\r\n}\r\n\r\nexport let changeNodeValue = (node, text) => {\r\n    node && node.firstChild && (node.firstChild.nodeValue = text);\r\n}\r\n\r\nexport let changeTextContent = (textNode, text) => {\r\n    textNode && (textNode.textContent = text);\r\n}\r\n\r\nexport let getTextContent = (textNode) => {\r\n    return textNode && textNode.textContent;\r\n}\r\n\r\nexport let removeAttribute = (node, attr) => {\r\n    node && node.removeAttribute(attr);\r\n}\r\n\r\nexport let findIteratorNode = (parentNode, key) => {\r\n    let childrens = parentNode.childNodes;\r\n    let iteratorNodes = [];\r\n    for (let i = 0; i < childrens.length; i++) {\r\n        let node = childrens[i];\r\n        if (node.forString && node.forKey && node.forKey == key) {\r\n            iteratorNodes.push(node);\r\n        }\r\n        if (node.childNodes.length) {\r\n            iteratorNodes.concat(findIteratorNode(node, key));\r\n        }\r\n    }\r\n    return iteratorNodes;\r\n}\r\n\r\nexport let hideNode = (node) => {\r\n    node.style.display = \"none\";\r\n}\r\n\r\nexport let showNode = (node) => {\r\n    node.style.display = \"block\";\r\n}\r\n\r\nexport let removeNode = (node) => {\r\n    node && node.parentNode && node.parentNode.removeChild(node);\r\n}\r\n\r\n","import { compileTpl } from '../util/template'\r\nimport { createComment } from '../dom/domOp'\r\nimport { NodeType, RegexpStr } from \"../constants/constant\"\r\nimport { isKvmAttribute } from '../util/validator'\r\nimport { bindEvent } from \"../dom/event\"\r\nimport { getDotVal } from \"../util/object\"\r\nimport * as DomOp from '../dom/domOp'\r\nimport {isNull} from \"../util/object\";\r\n\r\nexport class VDOM {\r\n    nodeType;\r\n    $dom;\r\n    attributes;\r\n    nextSibling;\r\n    parentNode;\r\n    childrenVdom = [];\r\n    kshow;\r\n    kif;\r\n    isComponent = false;\r\n    $emptyComment = createComment('');   // 空白注释, 替换kif dom\r\n    constructor (node, kmv = {}) {\r\n        node.attributes && (this.attributes = [].slice.call(node.attributes).slice(0));\r\n        if (node.nodeType === NodeType.ELEMENT) {\r\n            this.kshow = node.getAttribute(\"k-show\");\r\n            this.kif = node.getAttribute(\"k-if\");\r\n        }\r\n        this.nextSibling = node.nextSibling;\r\n        this.parentNode = node.parentNode;\r\n    }\r\n    // 传递组件对象, 组件私有方法\r\n    renderAttr (data, kmv, component: any = {}) {\r\n        if (this.nodeType === NodeType.ELEMENT) {\r\n            let node = this.$dom;\r\n            let attrs = this.attributes;\r\n            for (let i = 0; i < attrs.length; i++) {\r\n                let attr = attrs[i];\r\n                let attrName = attr.nodeName, attrVal = attr.nodeValue;\r\n                if (RegexpStr.kAttribute.test(attrName)) {\r\n                    let key = attr.nodeName.replace(RegexpStr.kAttribute, '$1');\r\n                    if (key === 'class') {\r\n                        // 类 a:'class2', b:'class2'\r\n                        let arr = attrVal.split(\",\");\r\n                        let valRes = \"\";\r\n                        for (var n = 0; n < arr.length; n++) {\r\n                            var ak = arr[n].split(\":\")[0];\r\n                            if (getDotVal(data, ak.trim())) {\r\n                                valRes += arr[n].split(\":\")[1].trim() + \" \";\r\n                            }\r\n                        }\r\n                        node.setAttribute(key, valRes.trim());\r\n                    } else {\r\n                        let val = compileTpl(attrVal, data);\r\n                        node.setAttribute(key, val);\r\n                    }\r\n                } else if (RegexpStr.kOnAttribute.test(attrName)) {\r\n                    let event = attrName.replace(RegexpStr.kOnAttribute, '$1');\r\n                    let func = compileTpl(attrVal, data);\r\n                    let match = func.match(RegexpStr.methodAndParam);\r\n                    let method = match[1];\r\n                    let params = match[2];\r\n                    let paramsArr = params.split(\",\")\r\n                    for (var n = 0; n < paramsArr.length; n++) {\r\n                        if (paramsArr[n] === 'this') {\r\n                            paramsArr[n] = this.$dom;\r\n                        } else {\r\n                            paramsArr[n] = String(paramsArr[n]).trim();\r\n                        }\r\n                    }\r\n                    if (!isNull(component)) {\r\n                        bindEvent(node, event, method, paramsArr, component.methods, component.$data);\r\n                    } else {\r\n                        bindEvent(node, event, method, paramsArr, kmv.methods, kmv.data);\r\n                    }\r\n                    node.removeAttribute(attrName);\r\n                } else {\r\n                    node.setAttribute(attrName, attrVal);\r\n                }\r\n                if (this.kshow) {\r\n                    let isShow = getDotVal(data, this.kshow);\r\n                    this.$dom.style.display = !!isShow ? \"block\" : \"none\";\r\n                }\r\n                if (this.kif) {\r\n                    let isIf = getDotVal(data, this.kif);\r\n                    if (!isIf) DomOp.replaceNode(this.$dom, this.$emptyComment);\r\n                    else DomOp.replaceNode(this.$emptyComment, this.$dom)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    reRenderAttr (data, kmv, component: any = {}) {\r\n        let node = this.$dom;\r\n        for (let i = 0; i < this.attributes.length; i++) {\r\n            let attr = this.attributes[i];\r\n            let attrName = attr.nodeName, attrVal = attr.nodeValue;\r\n            if (isKvmAttribute(attrName)) {\r\n                if (RegexpStr.kAttribute.test(attrName)) {\r\n                    let key = attr.nodeName.replace(RegexpStr.kAttribute, '$1');\r\n                    if (key === 'class') {\r\n                        // 类 a:'class2', b:'class2'\r\n                        let arr = attrVal.split(\",\");\r\n                        let valRes = \"\";\r\n                        for (var n = 0; n < arr.length; n++) {\r\n                            var ak = arr[n].split(\":\")[0];\r\n                            if (getDotVal(data, ak.trim())) {\r\n                                valRes += arr[n].split(\":\")[1].trim() + \" \";\r\n                            }\r\n                        }\r\n                        node.setAttribute(key, valRes.trim());\r\n                        node.removeAttribute(attrName);\r\n                    } else {\r\n                        let newVal = compileTpl(attrVal, data);\r\n                        let oldVal = node.getAttribute(key);\r\n                        newVal !== oldVal && node.setAttribute(key, newVal);\r\n                        node.removeAttribute(attrName);\r\n                    }\r\n                } else {\r\n                    let newVal = compileTpl(attrVal, data);\r\n                    let oldVal = node.getAttribute(attrName);\r\n                    newVal !== oldVal && node.setAttribute(attrName, newVal);\r\n                }\r\n            } else if (RegexpStr.kOnAttribute.test(attrName)) {\r\n                node.removeAttribute(attrName);\r\n            } else {\r\n                node.setAttribute(attrName, attrVal);\r\n            }\r\n        }\r\n        if (!isNull(component)) {\r\n            if (this.kshow) {\r\n                let isShow = getDotVal(component.$data, this.kshow);\r\n                this.$dom.style.display = !!isShow ? \"block\" : \"none\";\r\n            }\r\n            if (this.kif) {\r\n                let isIf = getDotVal(component.$data, this.kif);\r\n                if (!isIf) DomOp.replaceNode(this.$dom, this.$emptyComment);\r\n            }\r\n        } else {\r\n            if (this.kshow) {\r\n                let isShow = getDotVal(data, this.kshow);\r\n                this.$dom.style.display = !!isShow ? \"block\" : \"none\";\r\n            }\r\n            if (this.kif) {\r\n                let isIf = getDotVal(data, this.kif);\r\n                if (!isIf) DomOp.replaceNode(this.$dom, this.$emptyComment);\r\n                else DomOp.replaceNode(this.$emptyComment, this.$dom);\r\n            }\r\n        }\r\n    }\r\n}","import { getDotVal, setObserveDotVal } from \"../util/object\";\r\nimport {VDOM} from \"./VDOM\";\r\n\r\nexport class InputDOM extends VDOM {\r\n    nodeType;\r\n    tagName;\r\n    attributes;\r\n    template;\r\n    childrenVdom = [];\r\n    $dom;       // 联系真实dom\r\n    kmodel;\r\n    constructor (node) {\r\n        super(node);\r\n        this.tagName = node.tagName;\r\n        this.attributes = node.attributes;\r\n        this.nodeType = node.nodeType;\r\n        this.kmodel = node.getAttribute(\"k-model\");\r\n        this.$dom = node;\r\n        node.removeAttribute(\"k-model\");\r\n    }\r\n    renderInit(data, kmv) {\r\n        this.$dom.value = getDotVal(data, this.kmodel);\r\n        this.$dom.oninput = (ev) => {\r\n            setObserveDotVal(data, this.kmodel, this.$dom.value);\r\n        }\r\n        this.renderAttr(data, kmv, null);\r\n    }\r\n    reRender (data, kmv) {\r\n        let text = getDotVal(data, this.kmodel);\r\n        this.$dom.value = text;\r\n        this.reRenderAttr(data, kmv, null);\r\n    }\r\n}","import { RegexpStr } from '../constants/constant'\r\n\r\nexport let isBraceReg = (str: string) => {\r\n    return RegexpStr.brace.test(str);\r\n}\r\n\r\n/**\r\n *  是否有包含语法\r\n * @param str\r\n */\r\nexport let isForStatement = (str: string) => {\r\n    return RegexpStr.forStatement.test(str);\r\n}\r\n\r\n\r\nexport let isKvmAttribute = (key) => {\r\n    return RegexpStr.arrtibuteKey.test(key);\r\n}\r\n\r\nexport let isUnknowElement = (tag) => {\r\n    var el = document.createElement(tag);\r\n    if (tag.indexOf('-') > -1) {\r\n        // http://stackoverflow.com/a/28210364/1070244\r\n        return (\r\n            el.constructor === (<any>window).HTMLUnknownElement ||\r\n            el.constructor === (<any>window).HTMLElement\r\n        )\r\n    } else {\r\n        return /HTMLUnknownElement/.test(el.toString())\r\n    }\r\n}","import { ForItemDOM } from './ForItemDOM'\r\nimport { RegexpStr, ArrayOp } from '../constants/constant'\r\nimport { getDotVal, depCopy, isNull } from \"../util/object\"\r\nimport * as DomOp from \"../dom/domOp\"\r\nimport {diff, depCopyArray} from \"../util/array\";\r\nimport {isUnknowElement} from \"../util/validator\";\r\nimport {ComponentDOM} from \"./ComponentDOM\";\r\nimport { VDOM } from \"./VDOM\";\r\n\r\nexport class ForDOM extends VDOM {\r\n    nextSibling;        // 后一个元素\r\n    templateNode;       // 模板节点, 共列表元素使用\r\n    parentNode;         // 父节点\r\n    childrenVdom = [];\r\n    forObjectKey;   // arr\r\n    forKey;         // i\r\n    tagName;\r\n    $data;          // 存放遍历的数据，下次比较\r\n    $dom;           // 对应的真实dom\r\n    isList;\r\n    node;\r\n    isComponent;\r\n    // 第三个参数组件用的\r\n    constructor (node, kmv, parentComponent = {}) {\r\n        super(node, kmv);\r\n        this.nextSibling = node.nextSibling;\r\n        this.parentNode = node.parentNode;\r\n        this.tagName = node.tagName;\r\n        this.templateNode = node;\r\n        this.isList = true;\r\n        let forString = node.getAttribute(\"k-for\");\r\n        let match = RegexpStr.forStatement.exec(forString);\r\n        this.forObjectKey = match[2].trim();        // 循环的键 item in arr 的 arr\r\n        this.forKey = match[1].trim();              // 循环的key值 item in arr 的 item\r\n        this.node = node;\r\n        // 组件用组件的数据，否则用原始数据\r\n        let srcData = isNull(parentComponent) ? kmv.data: parentComponent['$data'];\r\n        let iteratorData = getDotVal(srcData, this.forObjectKey);\r\n        if (Array.isArray(iteratorData)) {\r\n            this.$data = depCopyArray(iteratorData);\r\n        } else {\r\n            this.$data  = depCopy(iteratorData);\r\n        }\r\n        this.isComponent = true;\r\n    }\r\n    renderInit(data, kmv) {\r\n        let docFrag = this.transDOM(data, kmv);\r\n        this.$dom = docFrag.firstChild;\r\n        this.insertNewDOM(docFrag);\r\n        DomOp.removeNode(this.node);\r\n    }\r\n    transDOM (data, kmv) {\r\n        let iteratorData = getDotVal(data, this.forObjectKey);\r\n        let docFrag = document.createDocumentFragment();\r\n        // 组件的话拼接\r\n        if (Array.isArray(this.$data)) {\r\n            // 数组循环\r\n            // this.$data = iteratorData.slice(0);\r\n            for (let i = 0; i < this.$data.length; i++) {\r\n                let iteratorObj = Object.create(data);     // 构造遍历的对象\r\n                iteratorObj[this.forKey] = this.$data[i];\r\n                // 第三个参数传递给组件的对象\r\n                let forItem = new ForItemDOM(this.templateNode.cloneNode(true), kmv, iteratorObj);\r\n                this.childrenVdom.push(forItem);\r\n                let forItemDom = forItem.transDOM(iteratorObj, kmv);\r\n                docFrag.appendChild(forItemDom);\r\n            }\r\n        } else if (typeof iteratorData === 'object') {\r\n            // 对象循环\r\n            this.$data = iteratorData;\r\n            for (let i in iteratorData) {\r\n                let forItem = new ForItemDOM(this.templateNode, kmv, data);\r\n                this.childrenVdom.push(forItem);\r\n                let iteratorObj = Object.create(data);     // 构造遍历的对象\r\n                iteratorObj[this.forKey] = this.$data[i];\r\n                let forItemDom = forItem.transDOM(iteratorObj, kmv);\r\n                docFrag.appendChild(forItemDom);\r\n            }\r\n        }\r\n        return docFrag;\r\n    }\r\n    insertNewDOM (docFrag) {\r\n        if (this.nextSibling) {\r\n            DomOp.insertBefore(this.nextSibling, docFrag);\r\n        } else if (this.parentNode) {\r\n            DomOp.appendChild(this.parentNode, docFrag);\r\n        }\r\n    }\r\n    reRender (data, kmv, component: ComponentDOM = null) {\r\n        let arrKey = this.forObjectKey;\r\n        let newDatas = getDotVal(data, arrKey); // 获取新的数据集合\r\n        if (Array.isArray(this.$data)) {\r\n            let change = diff(this.$data, newDatas);\r\n            if (change.length) {\r\n                this.notifyDataChange(change, kmv, newDatas, component);\r\n                this.$data = depCopyArray(newDatas);\r\n            } else {\r\n                for (let i = 0, len = this.$data.length; i < len; i++) {\r\n                    let iteratorObj = Object.create(data);  // data\r\n                    iteratorObj[this.forKey] = this.$data[i];\r\n                    this.childrenVdom[i] && this.childrenVdom[i].reRender(iteratorObj, kmv, component);\r\n                }\r\n            }\r\n        } else if (typeof newDatas === 'object'){\r\n            // 渲染对象\r\n            let idx = 0;\r\n            for (let key in this.$data) {\r\n                let iteratorObj = Object.create(data);\r\n                iteratorObj[this.forKey] = this.$data[key];\r\n                this.childrenVdom[idx].reRender(iteratorObj, kmv);\r\n                idx++;\r\n            }\r\n        }\r\n    }\r\n    notifyDataChange (change, kmv, newDatas, component) {\r\n        if (Array.isArray(this.$data)) {\r\n            for (let i = 0; i < change.length; i++) {\r\n                var op = change[i].op;\r\n                if (change[i].batch) {\r\n                    switch (op) {\r\n                        case ArrayOp.PUSH:\r\n                            this.batchAdd(change[i].array, kmv, component);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    switch (op) {\r\n                        case ArrayOp.PUSH:\r\n                            this.addNewItem(change[i].text, kmv);\r\n                            break;\r\n                        case ArrayOp.POP:\r\n                            this.popItem();\r\n                            break;\r\n                        case ArrayOp.CHANGE:\r\n                            this.changeItem (change[i].index, kmv, newDatas, component)\r\n                            break\r\n                        case ArrayOp.SHIFT:\r\n                            this.shiftItem();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    batchAdd (arr = [], kmv, component: ComponentDOM = null) {\r\n        let docFrag = document.createDocumentFragment();\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            let iteratorObj;     // 构造遍历的对象\r\n            if (component) {\r\n                iteratorObj = Object.create(component.$data);\r\n            } else {\r\n                iteratorObj = Object.create(kmv.data);\r\n            }\r\n            iteratorObj[this.forKey] = arr[i];\r\n            let newItem = new ForItemDOM(this.templateNode, kmv, iteratorObj);\r\n            this.childrenVdom.push(newItem);\r\n            let newDom = newItem.transDOM(iteratorObj, kmv);\r\n            docFrag.appendChild(newDom);\r\n        }\r\n        this.insertNewDOM(docFrag)\r\n    }\r\n    addNewItem (val, kmv) {\r\n        let newItem = new ForItemDOM(this.templateNode, kmv);\r\n        let iteratorObj = Object.create(kmv.data);     // 构造遍历的对象\r\n        iteratorObj[this.forKey] = val;\r\n        let newDom = newItem.transDOM(iteratorObj, kmv);\r\n        this.childrenVdom.push(newItem);\r\n        this.insertNewDOM(newDom);\r\n    }\r\n    popItem () {\r\n        let popVdom = this.childrenVdom.pop();\r\n        popVdom.$dom && DomOp.removeNode(popVdom.$dom);\r\n    }\r\n    changeItem (i, kmv, newArray, component) {\r\n        let iteratorObj;\r\n        if (!isNull(component)) {\r\n            iteratorObj = Object.create(component.$data);\r\n        } else {\r\n            iteratorObj = Object.create(kmv.data);\r\n        }\r\n        iteratorObj[this.forKey] = newArray[i];\r\n        this.childrenVdom[i].reRender(iteratorObj, kmv);\r\n    }\r\n    shiftItem () {\r\n        let shiftVdom = this.childrenVdom.shift();\r\n        this.childrenVdom.shift();\r\n        DomOp.removeNode(shiftVdom.$dom);\r\n    }\r\n}","import { NormalDOM } from './NormalDOM'\r\nimport { VDOM } from './VDOM'\r\nimport * as DomOp from '../dom/domOp'\r\nimport {RegexpStr, NodeType} from \"../constants/constant\"\r\nimport {\r\n    depCopy, getDotVal, isNull,\r\n    extend\r\n} from \"../util/object\"\r\nimport { VDOMInterface } from \"./VDOMInterface\"\r\nimport {ForDOM} from \"./ForDOM\";\r\nimport {observer} from \"../core/observer\";\r\nimport {isUnknowElement} from \"../util/validator\";\r\nimport {InputDOM} from \"./InputDOM\";\r\n\r\nexport class ComponentDOM extends VDOM implements VDOMInterface {\r\n    nodeType;\r\n    tagName;\r\n    attributes;\r\n    template;\r\n    childrenVdom = [];\r\n    $dom;       // 联系真实dom\r\n    $data = {};\r\n    node;\r\n    methods;\r\n    isComponent = true;\r\n    forKey;\r\n    model;\r\n    constructor (node, kmv, parent: any = null) {\r\n        super(node);\r\n        this.isComponent = true;\r\n        this.tagName = node.tagName;\r\n        let component = kmv.components[this.tagName.toLowerCase()]; // 组件配置\r\n        if (component) {\r\n            this.methods = component.methods;\r\n            let div = document.createElement(\"div\");\r\n            div.innerHTML = component.template.trim() ;         // 转为dom\r\n            this.template = component.template.trim();\r\n            this.attributes = node.attributes;\r\n            for (let i = 0; i < node.attributes.length; i++) {\r\n                (<any> div.firstChild).setAttribute(node.attributes[i].nodeName, node.attributes[i].nodeValue);\r\n            }\r\n            this.node = node;\r\n            this.$dom = div.firstChild; // 关联dom\r\n            this.model = node.getAttribute(\":model\");    // 数据键\r\n            // console.log(parentData, this.model);\r\n            let parentData;\r\n            if (parent instanceof ComponentDOM) {\r\n                parentData = parent['$data'];\r\n            } else {\r\n                parentData = kmv.data;\r\n            }\r\n            this.$data = {\r\n                model: getDotVal(parentData, this.model)\r\n            };   // 渲染的数据\r\n            if (component.data) {\r\n                this.$data = extend(this.$data, component.data());\r\n            }\r\n            observer(this.$data, kmv);\r\n            if (this.$data['model']) {\r\n                for (let i = 0; i < this.$dom.childNodes.length; i++) {\r\n                    let child = this.$dom.childNodes[i];\r\n                    if (child.nodeType == NodeType.ELEMENT) {\r\n                        if (child.getAttribute(\"k-for\")) {\r\n                            this.childrenVdom.push(new ForDOM(child, kmv, this));\r\n                        } else if (child.getAttribute(\"k-model\") && RegexpStr.inputElement.test(child.tagName)) {\r\n                            this.childrenVdom.push(new InputDOM(child));\r\n                        } else if (isUnknowElement(child.tagName)) {\r\n                            this.childrenVdom.push(new ComponentDOM(child, kmv, this));\r\n                        } else {\r\n                            this.childrenVdom.push(new NormalDOM(child, kmv, this));\r\n                        }\r\n                    } else {\r\n                        this.childrenVdom.push(new NormalDOM(child, kmv, this));\r\n                    }\r\n                }\r\n            }\r\n            this.node = node;\r\n        } else {\r\n            console.error(\"无效标签\" + this.tagName);\r\n        }\r\n    }\r\n    renderInit(data = null, kmv) {\r\n        this.insertNewDOM();\r\n        DomOp.removeNode(this.node);\r\n        // 先插入后渲染\r\n        this.childrenVdom.forEach((child) => {\r\n            child.renderInit(this.$data, kmv, this);\r\n        });\r\n    }\r\n    transDOM (data, kmv) {\r\n        return this.$dom;\r\n    }\r\n    reRender(data, kmv) {\r\n        this.childrenVdom.forEach((child) => {\r\n            child.reRender(this.$data, kmv, this);\r\n        });\r\n    }\r\n    getRealDOM () {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = this.template;         // 转为dom\r\n        return div.firstChild;\r\n    }\r\n    replaceDOM () {\r\n    }\r\n    insertNewDOM () {\r\n        DomOp.insertBefore(this.node, this.$dom);\r\n        DomOp.removeNode(this.node);\r\n    }\r\n}","import { RegexpStr } from '../constants/constant'\r\nimport { getDotVal, depCopy } from './object'\r\nimport { evalJs } from './function'\r\n/**\r\n *  转换逻辑操作运算结果\r\n *\r\n */\r\nexport let transArithmeticOp = (tpl, obj) => {\r\n\r\n    let opReg = RegexpStr.arithmeticOp;\r\n    let arr = tpl.split(opReg);   // 符号切分\r\n    let opRegArr = tpl.match(opReg);\r\n    let isParamReg = RegexpStr.isParams;\r\n\r\n    let tmp;\r\n    let newStr = '';\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n        tmp = arr[i].trim();\r\n        if (isParamReg.test(tmp)) {\r\n            // 如果是变量\r\n            let val = getDotVal(obj, tmp);\r\n            if (isNaN(val)) {       // 字符串\r\n                newStr += '\"' + val + '\"';\r\n            } else {\r\n                if (!val) val = 0;\r\n                newStr += val;\r\n            }\r\n        } else {\r\n            newStr += tmp;\r\n        }\r\n\r\n        if (i < arr.length - 1) {\r\n            newStr += opRegArr[i];\r\n        }\r\n    }\r\n    let res = eval(newStr);\r\n    return res;\r\n}\r\n\r\nexport let transTernaryOperator = (tpl, obj) => {\r\n    let arr = tpl.split(/\\?|:|\\(|\\)|\\+|-|\\*|\\/|!/);\r\n    let match = tpl.match(/\\?|:|\\(|\\)|\\+|-|\\*|\\/|!/g);\r\n\r\n    let newStr = '';\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let item = arr[i].trim();\r\n        if (item && RegexpStr.isParams.test(item)) {\r\n            newStr += '_data.' + item;\r\n        } else {\r\n            newStr += item;\r\n        }\r\n        if (match[i])\r\n            newStr += match[i];\r\n    }\r\n    return (function(str, _data) {\r\n        return eval(str);\r\n    })(newStr, obj)\r\n}\r\n\r\nexport let compileTpl = (tpl, obj) => {\r\n    let braceReg = RegexpStr.brace;\r\n    var regRes;\r\n    while (regRes = braceReg.exec(tpl)) {\r\n        let key = regRes ? regRes[1].trim() : '';\t// 获取括号的键\r\n        if (key) {\r\n            let text = evalJs(key, obj);\r\n            tpl = tpl.replace(braceReg, text);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n    /*var regRes;\r\n    while (regRes = braceReg.exec(tpl)) {\r\n        let key = regRes ? regRes[1].trim() : '';\t// 获取括号的键\r\n        let opReg = RegexpStr.arithmeticOp;     // 是否有操作符\r\n        let text = '';\r\n        if (key) {\r\n            if (opReg.test(key)) {\r\n                text = transArithmeticOp(key, obj);\r\n            } else if (RegexpStr.isTernaryOp.test(key)) {\r\n                text = transTernaryOperator(key, obj);\r\n            } else {\r\n                text = getDotVal(obj, key);\r\n            }\r\n            tpl = tpl.replace(braceReg, text);\r\n        } else {\r\n            return '';\r\n        }\r\n    }*/\r\n    return tpl;\r\n}\r\n\r\n\r\n","import { compileTpl } from '../util/template'\r\nimport * as DomOp from '../dom/domOp'\r\nimport { NodeType, RegexpStr } from \"../constants/constant\"\r\nimport { VDOM } from './VDOM'\r\nimport { ForDOM } from './ForDOM'\r\nimport { InputDOM } from './InputDOM'\r\nimport { isUnknowElement } from '../util/validator'\r\nimport { ComponentDOM } from './ComponentDOM'\r\nimport { getDotVal } from \"../util/object\";\r\nimport { renderInit } from \"../util/render\";\r\n\r\nexport class NormalDOM extends VDOM {\r\n    nodeType;\r\n    tagName;\r\n    attributes;\r\n    template;\r\n    childrenVdom = [];\r\n    $dom;       // 联系真实dom\r\n    // 第三个参数传递给子组件的数据\r\n    constructor (node, kmv, parentData: any = {}) {\r\n        super(node);\r\n        switch (node.nodeType) {\r\n            case NodeType.TEXT:\r\n                this.template = node.textContent;\r\n                node.textContent = '';\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                break;\r\n        }\r\n        this.tagName = node.tagName,\r\n        this.attributes = node.attributes && ([].slice.call(node.attributes).slice(0)),\r\n        this.nodeType = node.nodeType;\r\n        this.$dom = node;\r\n        if (node.childNodes) {\r\n            for (let i = 0; i < node.childNodes.length; i++) {\r\n                let child = node.childNodes[i];\r\n                if (child.nodeType === NodeType.ELEMENT) {\r\n                    if (child.getAttribute(\"k-for\")) {\r\n                        this.childrenVdom.push(new ForDOM(child, kmv, parentData));\r\n                    } else if (child.getAttribute(\"k-model\") && RegexpStr.inputElement.test(child.tagName)) {\r\n                        this.childrenVdom.push(new InputDOM(child));\r\n                    } else if (isUnknowElement(child.tagName)) {\r\n                        this.childrenVdom.push(new ComponentDOM(child, kmv, parentData));\r\n                    } else {\r\n                        this.childrenVdom.push(new NormalDOM(child, kmv, parentData));\r\n                    }\r\n                } else {\r\n                    this.childrenVdom.push(new NormalDOM(child, kmv, parentData));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    renderInit(data, kmv, component: ComponentDOM = null) {\r\n        switch (this.nodeType) {\r\n            case NodeType.TEXT:\r\n                let text;\r\n                if (component) {\r\n                    text = compileTpl(this.template, component.$data);\r\n                } else {\r\n                    text = compileTpl(this.template, data);\r\n                }\r\n                DomOp.changeTextContent(this.$dom, text);\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                this.childrenVdom.forEach((child) => {\r\n                    child.renderInit(data, kmv, component);\r\n                });\r\n                this.renderAttr(data, kmv, component);\r\n                break;\r\n        }\r\n    }\r\n    reRender (data, kmv, component) {\r\n        switch (this.nodeType) {\r\n            case NodeType.TEXT:\r\n                let text;\r\n                if (component) {\r\n                    text = compileTpl(this.template, component.$data);\r\n                } else {\r\n                    text = compileTpl(this.template, data);\r\n                }\r\n                text && DomOp.changeTextContent(this.$dom, text)\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                this.childrenVdom.forEach((child) => {\r\n                    child.reRender(data, kmv, component);\r\n                });\r\n                this.reRenderAttr(data, kmv, component);\r\n                break;\r\n        }\r\n    }\r\n    insertNewDOM (newDom) {\r\n        if (this.nextSibling) {\r\n            DomOp.insertBefore(this.nextSibling, newDom);\r\n        } else if (this.parentNode) {\r\n            DomOp.appendChild(this.parentNode, newDom);\r\n        }\r\n    }\r\n    transDOM (data, kmv) {\r\n        this.renderInit(data, kmv);\r\n        this.childrenVdom.forEach((child) => {\r\n            this.$dom.appendChild(child.transDOM(data, kmv));\r\n        });\r\n        return this.$dom;\r\n    }\r\n}","import { ArrayOp } from \"../constants/constant\"\r\nimport {depCopy} from \"./object\";\r\n\r\nexport let diff = (arr1 = [], arr2 = []) => {\r\n    let change = [];\r\n    let cp = arr1.slice(0), cp2 = arr2.slice(0);        // 拷贝一份\r\n    let len1 = arr1.length, len2 = arr2.length;\r\n    let len = Math.min(len1, len2);\r\n    for (let i = 0; i < len; i++) {\r\n        if (arr1[i] !== arr2[i]) {\r\n            change.push({\r\n                op: ArrayOp.CHANGE,\r\n                index: i,\r\n                text: arr2[i]\r\n            })\r\n        }\r\n    }\r\n    if (len1 > len2) {\r\n        let deleteArr = arr1.slice(len2);\r\n        // 删除dom\r\n        for (let i = 0; i < deleteArr.length; i++) {\r\n            change.push({\r\n                op: ArrayOp.POP,\r\n                index: i + len2,\r\n                text: deleteArr[i]\r\n            })\r\n        }\r\n    } else if (len2 > len1) {\r\n        let addArr = arr2.slice(len1);\r\n        change.push({\r\n            batch: true,\r\n            op: ArrayOp.PUSH,\r\n            array: addArr\r\n        })\r\n    }\r\n    return change;\r\n}\r\n\r\nexport let depCopyArray = (arr) => {\r\n    if (typeof arr === 'object')\r\n        return JSON.parse(JSON.stringify(arr));\r\n    else {\r\n        return [];\r\n    }\r\n}","import * as ObjectUtil from '../util/object'\r\nimport { ArrayMethod } from '../constants/constant'\r\nimport { getDotVal } from \"../util/object\";\r\nimport { setObserveDotVal } from \"../util/object\";\r\nimport {depCopy} from \"../util/object\";\r\n\r\n/**\r\n *   URL:\r\n *   说明:\r\n *   负责人: kelen\r\n *   日期:  1/24 0024.\r\n */\r\nexport let observer = (obj, kmv, key = '') => {\r\n    let srcData = depCopy(obj);\r\n    for (let i in obj) {\r\n        let bigKey = key ? key + \".\" + i : i;\r\n        let defVal = obj[i];\r\n        Object.defineProperty(obj, i, {\r\n            configurable: true,\r\n            set: function (newVal) {\r\n                kmv.pendingValue = true;\r\n                kmv.changeQueue.push({\r\n                    kmv: kmv,\r\n                    bigKey: bigKey\r\n                });\r\n                kmv.watch[bigKey] && kmv.watch[bigKey].call(kmv.data, newVal);\r\n                this['__' + i + '__'] = newVal;\r\n            },\r\n            get: function() {\r\n                return this['__' + i + '__'] == undefined ? defVal : this['__' + i + '__'];\r\n            }\r\n        })\r\n        if (typeof obj[i] == 'object') {\r\n            if (Array.isArray(obj[i])) {\r\n                arrayObserve(obj[i], kmv, bigKey);\r\n            } else {\r\n                observer(obj[i], kmv, bigKey);\r\n            }\r\n        }\r\n        /*((defVal) => {\r\n            let val = defVal;\r\n            Object.defineProperty(obj, i, {\r\n                set: function (newVal) {\r\n                    // ObjectUtil.setObserveDotVal(kmv.$data, bigKey, newVal);\r\n                    kmv.pendingValue = true;\r\n                    kmv.changeQueue.push({\r\n                        kmv: kmv,\r\n                        bigKey: bigKey\r\n                    });\r\n                    kmv.watch[bigKey] && kmv.watch[bigKey].call(kmv.data, newVal);\r\n                    val = newVal;\r\n                },\r\n                get: function() {\r\n                    return val; // getDotVal(kmv.$data, bigKey) || defVal;\r\n                }\r\n            })\r\n        })(obj[i])*/\r\n    }\r\n    return srcData;\r\n}\r\n\r\nfunction arrayObserve(arr, kmv, bigKey) {\r\n    // 监听array操作\r\n    ArrayMethod.forEach((method) => {\r\n        Object.defineProperty(arr, method, {\r\n            configurable: true,\r\n            enumerable: false, // hide from for...in\r\n            writable: true,\r\n            value: function () {\r\n                // 有可能操作的不是数组\r\n                Array.prototype[method].apply(arr, arguments);\r\n                kmv.changeQueue.push({\r\n                    kmv: kmv,\r\n                    bigKey: bigKey\r\n                });\r\n                kmv.pendingValue = true;\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n","export class Event {\r\n    eventObject = {};\r\n    constructor() {}\r\n    $on = (event, fn) => {\r\n        this.eventObject[event] = {\r\n            fn: fn,\r\n            once: false\r\n        };\r\n    }\r\n    $once = (event, fn) => {\r\n        this.eventObject[event] = {\r\n            fn: fn,\r\n            once: true\r\n        };\r\n    }\r\n    $emit = (event, params) => {\r\n        let thisEvent = this.eventObject[event];\r\n        if (thisEvent) {\r\n            if (thisEvent.once) {\r\n                thisEvent['fn'].apply(this, [].concat(params));\r\n                delete this.eventObject[event];\r\n            } else {\r\n                thisEvent['fn'].apply(this, [].concat(params));\r\n            }\r\n        }\r\n    }\r\n}","export let bindEvent = (node, event, method, params, methodsObj, observeData) => {\r\n    if (node.addEventListener) {\r\n        node.addEventListener(event, function() {\r\n            if (methodsObj && methodsObj[method]) {\r\n                methodsObj[method].apply(observeData, params);\r\n            } else {\r\n                console.error(\"未声明\" + method + \"方法\");\r\n            }\r\n        });\r\n    } else {\r\n        node.attachEvent(\"on\" + event, function() {\r\n            if (methodsObj && methodsObj[method]) {\r\n                methodsObj[method].apply(observeData, params);\r\n            } else {\r\n                console.error(\"未声明\" + method + \"方法\");\r\n            }\r\n        })\r\n    }\r\n}\r\n","export let evalJs = (content, obj) => {\r\n    // console.dir(obj);\r\n    // return (function() { return eval(content) }).call(obj);\r\n    let res;\r\n    try {\r\n        return new Function(\"with(this){ return \" + content + \" }\").call(obj);\r\n    } catch  (err) {\r\n        return '';\r\n    }\r\n}\r\n\r\nexport let evalFunc = (code) => {\r\n    return new Function(\"with(this){ console.log(this); return \" + code + \" }\");\r\n}","import { compileTpl } from '../util/template'\r\nimport * as DomOp from '../dom/domOp'\r\nimport { VDOM } from './VDOM'\r\nimport { ForDOM } from './ForDOM'\r\nimport { InputDOM } from './InputDOM'\r\nimport { NodeType, RegexpStr } from \"../constants/constant\"\r\nimport { isUnknowElement } from '../util/validator'\r\nimport { ComponentDOM } from './ComponentDOM'\r\nimport {getDotVal} from \"../util/object\";\r\n\r\nexport class ForNormalDOM extends VDOM {\r\n    nodeType;\r\n    tagName;\r\n    attributes;\r\n    template;\r\n    childrenVdom = [];\r\n    $dom;       // 联系真实dom\r\n    constructor (node, kmv, parentData = {}) {\r\n        // h3\r\n        super(node);\r\n        this.tagName = node.tagName;\r\n        this.attributes = node.attributes && ([].slice.call(node.attributes).slice(0));\r\n        this.nodeType = node.nodeType;\r\n        switch (node.nodeType) {\r\n            case NodeType.TEXT:\r\n                this.template = node.textContent;\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                this.kshow = node.getAttribute(\"k-show\");\r\n                if (node.childNodes) {\r\n                    for (let i = 0; i < node.childNodes.length; i++) {\r\n                        let child = node.childNodes[i];\r\n                        if (child.nodeType === NodeType.ELEMENT) {\r\n                            if (child.getAttribute(\"k-for\")) {\r\n                                this.childrenVdom.push(new ForDOM(child, kmv, parentData));\r\n                            } else if (child.getAttribute(\"k-model\") && RegexpStr.inputElement.test(child.tagName)) {\r\n                                this.childrenVdom.push(new InputDOM(child));\r\n                            } else {\r\n                                this.childrenVdom.push(new ForNormalDOM(child, kmv, parentData))\r\n                            }\r\n                        } else {\r\n                            this.childrenVdom.push(new ForNormalDOM(child, kmv, parentData));\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    // iteratorObj 为遍历的数据，需要构造, 第三个组件实例\r\n    transDOM (data, kmv, component: any =  null) {\r\n        let newEle = document.createElement(this.tagName) ;\r\n        switch (this.nodeType) {\r\n            case NodeType.TEXT:\r\n                newEle = DomOp.createTextNode(this.tagName);\r\n                let text;\r\n                if (component) {\r\n                    text = compileTpl(this.template, component.$data);\r\n                } else {\r\n                    text = compileTpl(this.template, data);\r\n                }\r\n                newEle.textContent = text;\r\n                this.$dom = newEle;\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                newEle = document.createElement(this.tagName);\r\n                this.$dom = newEle;\r\n                this.childrenVdom\r\n                &&\r\n                this.childrenVdom.forEach((child) => {\r\n                    if (child instanceof ForDOM) {\r\n                        // 嵌套for\r\n                        child.parentNode = newEle;  // 嵌套父节点必须重新更新\r\n                        child.nextSibling = newEle.previousSibling;\r\n                        child.renderInit(data, kmv)\r\n                    } else {\r\n                        newEle.appendChild(child.transDOM(data, kmv, component));\r\n                    }\r\n\r\n                });\r\n                this.renderAttr(data, kmv, component);\r\n                break;\r\n        }\r\n        return newEle;\r\n    }\r\n    /**\r\n     * @param data      渲染的数据\r\n     * @param kmv       kmv\r\n     */\r\n    reRender (data, kmv, component) {\r\n        switch (this.nodeType) {\r\n            case NodeType.TEXT:\r\n                // 组件存在就用组件的数据去渲染\r\n                // component && (data = component.$data);\r\n                let text = compileTpl(this.template, data);\r\n                DomOp.changeTextContent(this.$dom, text)\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                this.childrenVdom.forEach((child) => {\r\n                    if (child instanceof ForDOM) {\r\n                        // 嵌套for\r\n                        child.reRender(data, kmv, component)\r\n                    } else {\r\n                        child.reRender(data, kmv, component);\r\n                        this.reRenderAttr(data, kmv, component);\r\n                    }\r\n                })\r\n                break;\r\n        }\r\n    }\r\n}","import * as DomOp from \"../dom/domOp\"\r\nimport { ForNormalDOM } from './ForNormalDOM'\r\nimport { VDOM } from './VDOM'\r\nimport { ForDOM } from './ForDOM'\r\nimport { InputDOM } from './InputDOM'\r\nimport { NodeType, RegexpStr } from \"../constants/constant\"\r\nimport {isUnknowElement} from \"../util/validator\";\r\nimport {ComponentDOM} from \"./ComponentDOM\";\r\nimport {getDotVal} from \"../util/object\";\r\n\r\nexport class ForItemDOM extends VDOM {\r\n    tagName;\r\n    templateNode;       // 模板节点, 每次构造时候需要获取template和attributes\r\n    childrenVdom = [];\r\n    attributes;\r\n    $dom;\r\n    template;\r\n    nodeType;\r\n    kshow;\r\n    componentInstance = null;\r\n    constructor (node, kmv, parentData = {}) {\r\n        super(node);\r\n        if (node.nodeType == NodeType.ELEMENT) {\r\n            if (isUnknowElement(node.tagName)) {\r\n                // 组件转换\r\n                this.componentInstance = new ComponentDOM(node, kmv, parentData);\r\n                node = new ComponentDOM(node, kmv, parentData).getRealDOM();\r\n                node.$data = parentData;\r\n                this.isComponent = true;\r\n            }\r\n        }\r\n        this.tagName = node.tagName;\r\n        this.attributes = node.attributes;\r\n        this.nodeType = node.nodeType;\r\n        this.templateNode = node;\r\n        for (let i = 0; i < node.childNodes.length; i++) {\r\n            let child = node.childNodes[i];\r\n            if (child.nodeType === NodeType.ELEMENT) {\r\n                if (isUnknowElement(child.tagName)) {\r\n                    this.childrenVdom.push(new ComponentDOM(child, kmv, parentData));\r\n                } else {\r\n                    if (child.getAttribute(\"k-for\")) {\r\n                        this.childrenVdom.push(new ForDOM(child, kmv, parentData));\r\n                    } else if (child.getAttribute(\"k-model\") && RegexpStr.inputElement.test(child.tagName)) {\r\n                        this.childrenVdom.push(new InputDOM(child));\r\n                    } else {\r\n                        this.childrenVdom.push(new ForNormalDOM(child, kmv, parentData))\r\n                    }\r\n                }\r\n            } else if (child.nodeType === NodeType.TEXT) {\r\n                this.childrenVdom.push(new ForNormalDOM(child, kmv, kmv.$data));\r\n            }\r\n        }\r\n        node.removeAttribute(\"k-for\");\r\n    }\r\n    transDOM(iteratorObj, kmv) {\r\n        let newElem = DomOp.createElement(this.tagName);\r\n        for (let i = 0, len = this.childrenVdom.length; i < len; i++) {\r\n            let childVdom = this.childrenVdom[i];\r\n            let newDom = childVdom.transDOM(iteratorObj, kmv, this.componentInstance);\r\n            newDom && newElem.appendChild(newDom);\r\n        }\r\n        this.$dom = newElem;\r\n        if (this.kshow) {\r\n            let isShow = getDotVal(iteratorObj, this.kshow);\r\n            this.$dom.style.display = !!isShow ? \"block\" : \"none\";\r\n        }\r\n        if (this.kif) {\r\n            let isIf = getDotVal(iteratorObj, this.kif);\r\n            if (!isIf) {\r\n                // 不显示\r\n                return this.$emptyComment;\r\n            }\r\n        }\r\n        return this.$dom;\r\n    }\r\n    // 重新渲染\r\n    reRender (iteratorObj, kmv, component: ComponentDOM = null) {\r\n        if (this.isComponent) {\r\n            // 需要子组件去渲染子元素\r\n            component = this.componentInstance;\r\n        }\r\n        this.childrenVdom.forEach((child) => {\r\n            child.reRender(iteratorObj, kmv, component);\r\n        });\r\n    }\r\n    insertNewDOM (newDom) {\r\n        if (this.nextSibling) {\r\n            DomOp.insertBefore(this.nextSibling, newDom);\r\n        } else if (this.parentNode) {\r\n            DomOp.appendChild(this.parentNode, newDom);\r\n        }\r\n    }\r\n}","import { NodeType, RegexpStr } from '../constants/constant'\r\nimport { ForDOM } from \"../vdom/ForDOM\"\r\nimport { NormalDOM } from \"../vdom/NormalDOM\"\r\nimport { InputDOM } from \"../vdom/InputDOM\"\r\nimport { isUnknowElement } from '../util/validator'\r\nimport { ComponentDOM } from \"../vdom/ComponentDOM\";\r\n\r\nexport class RenderQueue {\r\n    queue = [];\r\n    kmv;\r\n    constructor(node, kmv) {\r\n        this.kmv = kmv;\r\n        this.queue = this.queueInit(node);\r\n    }\r\n    getQueue() {\r\n        return this.queue;\r\n    }\r\n    queueInit (parentNode) {\r\n        let childNodes = parentNode.childNodes;\r\n        for (let i = 0; i < childNodes.length; i++) {\r\n            let child = childNodes[i];\r\n            switch (child.nodeType) {\r\n                case NodeType.TEXT:\r\n                    this.queue.push(new NormalDOM(child, this.kmv));\r\n                    break;\r\n                case NodeType.ELEMENT:\r\n                    if (isUnknowElement(child.tagName)) {\r\n                        // 组件\r\n                        this.queue.push(new ComponentDOM(child, this.kmv, null));\r\n                    } else {\r\n                        if (child.getAttribute(\"k-for\")) {\r\n                            this.queue.push(new ForDOM(child, this.kmv, this.kmv.data));\r\n                        } else if (child.getAttribute(\"k-model\") && RegexpStr.inputElement.test(child.tagName)) {\r\n                            this.queue.push(new InputDOM(child));\r\n                        } else {\r\n                            // 常规dom不需要传第三个参数\r\n                            this.queue.push(new NormalDOM(child, this.kmv));\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        return this.queue;\r\n    }\r\n}\r\n\r\n","import { RenderType } from '../constants/constant'\r\nimport { getDotVal } from './object'\r\nimport { diff } from \"./array\";\r\n\r\nexport let renderInit = (kmv) => {\r\n    let watcher = kmv.renderQueue;\r\n    let renderQueue = watcher.getQueue();\r\n    for (let i = 0; i < renderQueue.length; i++) {\r\n        let node = renderQueue[i];\r\n        node.renderInit(kmv.data, kmv);\r\n    }\r\n    nextTick(kmv);\r\n}\r\n\r\nlet nextTickHandler = (kmv) => {\r\n    if (kmv.pendingValue) {\r\n        kmv.pendingValue = false;\r\n        let lastOne = kmv.changeQueue.pop();\r\n        lastOne && reRender(lastOne.kmv, lastOne.bigKey);\r\n        kmv.changeQueue.length = 0;\r\n    }\r\n    nextTick(kmv);\r\n}\r\n\r\nexport let nextTick = (kmv) => {\r\n    setTimeout(function() {\r\n        // 下一次事件循环\r\n        nextTickHandler(kmv);\r\n    }, 0);\r\n}\r\n\r\nexport let reRender = (kmv, key) => {\r\n    let renderQueue = kmv.renderQueue.getQueue();\r\n    for (let i = 0; i < renderQueue.length; i++) {\r\n        let node = renderQueue[i];\r\n        node.reRender(kmv.data, kmv);\r\n    }\r\n}\r\n\r\n","import { renderInit } from './util/render'\r\nimport { observer } from './core/observer'\r\nimport { RenderQueue } from \"./core/RenderQueue\"\r\nimport { Event } from './util/event'\r\nimport { extend } from './util/object'\r\n\r\nfunction Kmv(opts) {\r\n\r\n    let elSelector = opts['el'];\r\n    let elem = document.querySelector(elSelector);\r\n    if (!elem) {\r\n        console.error(\"元素\" + elSelector + \"不存在!\");\r\n        return;\r\n    }\r\n    this.data = opts.data;\r\n    // 原始数据\r\n    this.watch = opts.watch || {};\r\n    this.pendingValue = false;\r\n    this.changeQueue = [];      // 每次循环改变队列\r\n    this.methods = opts.methods;    // 自定义事件\r\n\r\n    this.components = extend(this.components, opts.components);\r\n    this.mounted = typeof opts.mounted === 'function' ? opts.mounted : null;\r\n\r\n    let that = this;\r\n    if (opts.beforeInit) {\r\n        let event = new Event();\r\n        // 初始化数据事件\r\n        event.$once(\"initData\", function(data) {\r\n            let allData = extend(opts.data, data);\r\n            observer(allData, that);\r\n            // 获取需要渲染的dom列表\r\n            that.renderQueue = new RenderQueue(elem, this);\r\n            renderInit(that);\r\n        });\r\n        opts.beforeInit.call(that, event);\r\n    } else {\r\n        observer(opts.data, this);\r\n        // 获取需要渲染的dom列表\r\n        this.renderQueue = new RenderQueue(elem, this);\r\n        renderInit(this);\r\n    }\r\n    this.mounted && this.mounted.call(this);\r\n    return this;\r\n}\r\n\r\n(<any>Kmv).components = (name, config) => {\r\n    if (!Kmv.prototype.components) {\r\n        Kmv.prototype.components = {};\r\n    }\r\n    Kmv.prototype.components[name] = config;\r\n}\r\n\r\n(<any>window).Kmv = Kmv;\r\n\r\n\r\n"],"sourceRoot":""}