{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants/constant.ts","webpack:///./src/util/object.ts","webpack:///./src/dom/domOp.ts","webpack:///./src/vdom/VDOM.ts","webpack:///./src/vdom/ForDOM.ts","webpack:///./src/util/validator.ts","webpack:///./src/vdom/InputDOM.ts","webpack:///./src/util/template.ts","webpack:///./src/vdom/ComponentDOM.ts","webpack:///./src/core/observer.ts","webpack:///./src/util/array.ts","webpack:///./src/vdom/NormalDOM.ts","webpack:///./src/index.ts","webpack:///./src/util/render.ts","webpack:///./src/core/RenderQueue.ts","webpack:///./src/vdom/ForItemDOM.ts","webpack:///./src/vdom/ForNormalDOM.ts","webpack:///./src/util/function.ts","webpack:///./src/dom/event.ts","webpack:///./src/util/event.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Attr","K_MODEL","RegexpStr","brace","forStatement","bracket","isString","isParams","arithmeticOp","inputElement","arrtibuteKey","kAttribute","kOnAttribute","methodAndParam","isTernaryOp","ternaryOpSplit","isNormalHtmlTag","isProps","NodeType","ELEMENT","ATTRIBUTE","TEXT","COMMENT","DOCUMENT","ArrayMethod","RenderType","ArrayOp","constant_1","array_1","getDotVal","obj","val","k","arr","replace","split","shift","undefined","depCopy","newObj","Array","isArray","depCopyArray","setObserveDotVal","observeData","tmp","len","length","extend","srcObj","extObj","isNull","res","keys","insertAfter","node","newNode","parentNode","insertBefore","nextSibling","appendChild","parent","child","createTextNode","text","document","createComment","replaceNode","oldNode","replaceChild","createElement","tagName","deleteNode","removeChild","changeNodeValue","firstChild","nodeValue","changeTextContent","textNode","textContent","getTextContent","removeAttribute","attr","findIteratorNode","childrens","childNodes","iteratorNodes","forString","forKey","push","concat","hideNode","style","display","showNode","removeNode","template_1","domOp_1","validator_1","event_1","object_1","DomOp","object_2","VDOM","kmv","this","childrenVdom","isComponent","$emptyComment","attributes","slice","nodeType","kshow","getAttribute","kif","renderAttr","data","component","$dom","attrs","attrName","nodeName","attrVal","test","valRes","ak","trim","setAttribute","compileTpl","event_2","match","method","paramsArr","String","bindEvent","methods","$data","isShow","reRenderAttr","isKvmAttribute","newVal","ForItemDOM_1","ForDOM","_super","parentComponent","_this","templateNode","isList","exec","forObjectKey","srcData","iteratorData","__extends","renderInit","docFrag","transDOM","insertNewDOM","createDocumentFragment","iteratorObj","forItem","ForItemDOM","cloneNode","forItemDom","reRender","arrKey","newDatas","change","diff","notifyDataChange","idx","op","batch","PUSH","batchAdd","array","addNewItem","POP","popItem","CHANGE","changeItem","index","SHIFT","shiftItem","newItem","newDom","popVdom","pop","newArray","shiftVdom","isBraceReg","str","isForStatement","isUnknowElement","tag","el","indexOf","constructor","window","HTMLUnknownElement","HTMLElement","toString","InputDOM","kmodel","oninput","ev","function_1","transArithmeticOp","tpl","opReg","opRegArr","isParamReg","newStr","isNaN","eval","transTernaryOperator","item","_data","regRes","braceReg","evalJs","NormalDOM_1","VDOM_1","ForDOM_1","observer_1","InputDOM_1","ComponentDOM","components","toLowerCase","div","innerHTML","template","model","parentData","observer","NormalDOM","console","error","forEach","getRealDOM","replaceDOM","bigKey","defVal","configurable","set","pendingValue","changeQueue","watch","writable","apply","arguments","arrayObserve","arr1","arr2","len1","len2","Math","min","deleteArr","addArr","JSON","parse","stringify","ComponentDOM_1","render_1","RenderQueue_1","Kmv","opts","elSelector","elem","querySelector","mounted","that","beforeInit","Event","$once","allData","renderQueue","RenderQueue","config","getQueue","nextTick","setTimeout","lastOne","nextTickHandler","queue","queueInit","ForNormalDOM_1","componentInstance","ForNormalDOM","newElem","newEle","previousSibling","content","Function","err","evalFunc","code","event","params","methodsObj","addEventListener","attachEvent","eventObject","$on","fn","once","$emit","thisEvent"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","/**\r\n *   URL:\r\n *   说明:\r\n *   负责人: kelen\r\n *   日期:  1/24 0024.\r\n */\r\nexport const Attr = {\r\n    K_MODEL: 'k-model'\r\n}\r\n\r\nexport const RegexpStr = {\r\n    brace: /\\{\\{((?:.|\\n)+?)\\}\\}/,  // {{ name }}  大括号\r\n    forStatement: /([a-z_]+[\\w]*)\\s+in\\s+([a-z_][\\w.]+(\\[.*\\])*)/,\r\n    bracket: /\\[['|\"]?(\\w+)['|\"]?\\]/,   // 中括号\r\n    isString: /'([^']*)'|\"([^\\\"]*)\"/,\r\n    isParams: /^[^\"|^'\\d]+.*/,\r\n    arithmeticOp: /\\*|\\+|-\\/|\\(|\\)/g,          // 逻辑运算符\r\n    inputElement: /INPUT|TEXTAREA/,\r\n    arrtibuteKey: /k-for|k-model|k-if|k:.*|k-on:(.*)|k-show/,\r\n    kAttribute: /k:(.*)/,\r\n    kOnAttribute: /k-on:(.*)/,\r\n    methodAndParam: /([a-zA-Z\\d_]+)\\((.*)\\)/,\r\n    isTernaryOp: /!.*|!!.*|.+?.+:.+/,\r\n    ternaryOpSplit: /\\?|:|\\(|\\)|!!/,        // 正则切割\r\n    isNormalHtmlTag: /html|body|base|head|link|meta|style|title|address|article|aside|footer|header|h1|h2|h3|h4|h5|h6|hgroup|nav|section|div|dd|dl|dt|figcaption|figure|hr|img|li|main|ol|p|pre|ul|a|b|abbr|bdi|bdo|br|cite|code|data|dfn|em|i|kbd|mark|q|rp|rt|rtc|ruby|s|samp|small|span|strong|sub|sup|time|u|var|wbr|area|audio|map|track|video|embed|object|param|source|canvas|script|noscript|del|ins|caption|col|colgroup|table|thead|tbody|td|th|tr|button|datalist|fieldset|form|input|label|legend|meter|optgroup|option|output|progress|select|textarea|details|dialog|menu|menuitem|summary|content|element|shadow|template/i,\r\n    isProps: /:(.*)/\r\n}\r\n\r\nexport const NodeType = {\r\n    ELEMENT: 1,\r\n    ATTRIBUTE: 2,\r\n    TEXT: 3,\r\n    COMMENT: 8,\r\n    DOCUMENT: 9\r\n}\r\n\r\nexport const ArrayMethod = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'reverse']\r\n\r\nexport enum RenderType {\r\n    TEXT, INPUT, TEXTAREA, FOR, IF, ATTRIBUTE\r\n}\r\n\r\nexport enum ArrayOp {\r\n    PUSH, POP, SORT, CHANGE, SHIFT\r\n}","\r\nimport { RegexpStr } from '../constants/constant';\r\nimport { depCopyArray } from \"./array\";\r\n\r\nlet getDotVal = (obj, key) => {\r\n    let val, k;\r\n    if (key) {\r\n        key = key.replace(RegexpStr.bracket, \".$1\");\t\t// 把arr['name']/arr[\"name\"]/arr[0] 转为 arr.name/arr.0\r\n        val = obj;\r\n        // 获取对应的dot值\r\n        let arr = key.split(\".\") || [key];\r\n        while (k = arr.shift()) {\r\n            if (!val) {\r\n                val = undefined;\r\n                break;\r\n            }\r\n            val = val[k];\r\n        }\r\n    }\r\n    return val;\r\n}\r\n\r\nlet depCopy = (obj) => {\r\n    let newObj = {};\r\n    for (let i in obj) {\r\n        if (typeof obj[i] === 'object') {\r\n            if (Array.isArray(obj[i])) {\r\n                newObj[i] = depCopyArray(obj[i]);\r\n            } else {\r\n                newObj[i] = depCopy(obj[i]);\r\n            }\r\n        } else {\r\n            newObj[i] = obj[i];\r\n        }\r\n    }\r\n    return newObj;\r\n}\r\n\r\n\r\nlet setObserveDotVal = (observeData, key, val) => {\r\n    key = key.replace(RegexpStr.bracket, \".$1\");\t\t// 把arr['name']/arr[\"name\"]/arr[0] 转为 arr.name/arr.0\r\n    let tmp = observeData;\r\n    let arr = key.split(\".\");\r\n    let len = arr.length;\r\n    for (let i = 0; i < len - 1; i++) {\r\n        tmp = tmp[arr[i]];\r\n    }\r\n    tmp[arr[len - 1]] = val;\r\n}\r\n\r\nlet extend = (srcObj = {}, extObj) => {\r\n    for (let i in extObj) {\r\n        srcObj[i] = extObj[i];\r\n    }\r\n    return srcObj;\r\n}\r\n\r\nlet isNull = (obj) => {\r\n    let res;\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i) && !obj[i]) {\r\n            res = true;\r\n        }\r\n    }\r\n    return !res || obj == null || Object.keys(obj).length === 0;\r\n}\r\n\r\nexport { extend, isNull, setObserveDotVal, depCopy, getDotVal }","/**\r\n * Created by kelen on 2017/2/6.\r\n */\r\nimport { RegexpStr } from '../constants/constant'\r\nimport { compileTpl } from '../util/template'\r\nimport { isKvmAttribute } from '../util/validator'\r\nimport { bindEvent } from \"./event\";\r\n\r\nexport let insertAfter = (node, newNode) => {\r\n    node && node.parentNode && node.parentNode.insertBefore(newNode, node.nextSibling);\r\n}\r\n\r\nexport let appendChild = (parent, child) => {\r\n    parent && child && (parent.appendChild(child));\r\n}\r\n\r\nexport let createTextNode = (text) => {\r\n    return document.createTextNode(text);\r\n}\r\n\r\nexport let createComment = (text) => {\r\n    return document.createComment(text);\r\n}\r\n\r\nexport let replaceNode = (oldNode, newNode) => {\r\n    oldNode.parentNode && oldNode.parentNode.replaceChild(newNode, oldNode);\r\n}\r\n\r\nexport let createElement = (tagName) => {\r\n    return document.createElement(tagName);\r\n}\r\n\r\nexport let insertBefore = (node, newNode) => {\r\n    node && node.parentNode && node.parentNode.insertBefore(newNode, node);\r\n}\r\n\r\nexport let deleteNode = (parent, node) => {\r\n    parent && node && parent.removeChild(node);\r\n}\r\n\r\nexport let changeNodeValue = (node, text) => {\r\n    node && node.firstChild && (node.firstChild.nodeValue = text);\r\n}\r\n\r\nexport let changeTextContent = (textNode, text) => {\r\n    textNode && (textNode.textContent = text);\r\n}\r\n\r\nexport let getTextContent = (textNode) => {\r\n    return textNode && textNode.textContent;\r\n}\r\n\r\nexport let removeAttribute = (node, attr) => {\r\n    node && node.removeAttribute(attr);\r\n}\r\n\r\nexport let findIteratorNode = (parentNode, key) => {\r\n    let childrens = parentNode.childNodes;\r\n    let iteratorNodes = [];\r\n    for (let i = 0; i < childrens.length; i++) {\r\n        let node = childrens[i];\r\n        if (node.forString && node.forKey && node.forKey == key) {\r\n            iteratorNodes.push(node);\r\n        }\r\n        if (node.childNodes.length) {\r\n            iteratorNodes.concat(findIteratorNode(node, key));\r\n        }\r\n    }\r\n    return iteratorNodes;\r\n}\r\n\r\nexport let hideNode = (node) => {\r\n    node.style.display = \"none\";\r\n}\r\n\r\nexport let showNode = (node) => {\r\n    node.style.display = \"block\";\r\n}\r\n\r\nexport let removeNode = (node) => {\r\n    node && node.parentNode && node.parentNode.removeChild(node);\r\n}\r\n\r\n","import { compileTpl } from '../util/template'\r\nimport { createComment } from '../dom/domOp'\r\nimport { NodeType, RegexpStr } from \"../constants/constant\"\r\nimport { isKvmAttribute } from '../util/validator'\r\nimport { bindEvent } from \"../dom/event\"\r\nimport { getDotVal } from \"../util/object\"\r\nimport * as DomOp from '../dom/domOp'\r\nimport {isNull} from \"../util/object\";\r\n\r\nexport class VDOM {\r\n    nodeType;\r\n    $dom;\r\n    attributes;\r\n    nextSibling;\r\n    parentNode;\r\n    childrenVdom = [];\r\n    kshow;\r\n    kif;\r\n    isComponent = false;\r\n    $emptyComment = createComment('');   // 空白注释, 替换kif dom\r\n    constructor (node, kmv = {}) {\r\n        node.attributes && (this.attributes = [].slice.call(node.attributes).slice(0));\r\n        if (node.nodeType === NodeType.ELEMENT) {\r\n            this.kshow = node.getAttribute(\"k-show\");\r\n            this.kif = node.getAttribute(\"k-if\");\r\n        }\r\n        this.nextSibling = node.nextSibling;\r\n        this.parentNode = node.parentNode;\r\n    }\r\n    // 传递组件对象, 组件私有方法\r\n    renderAttr (data, kmv, component: any = {}) {\r\n        if (this.nodeType === NodeType.ELEMENT) {\r\n            let node = this.$dom;\r\n            let attrs = this.attributes;\r\n            for (let i = 0; i < attrs.length; i++) {\r\n                let attr = attrs[i];\r\n                let attrName = attr.nodeName, attrVal = attr.nodeValue;\r\n                if (RegexpStr.kAttribute.test(attrName)) {\r\n                    let key = attr.nodeName.replace(RegexpStr.kAttribute, '$1');\r\n                    if (key === 'class') {\r\n                        // 类 a:'class2', b:'class2'\r\n                        let arr = attrVal.split(\",\");\r\n                        let valRes = \"\";\r\n                        for (var n = 0; n < arr.length; n++) {\r\n                            var ak = arr[n].split(\":\")[0];\r\n                            if (getDotVal(data, ak.trim())) {\r\n                                valRes += arr[n].split(\":\")[1].trim() + \" \";\r\n                            }\r\n                        }\r\n                        node.setAttribute(key, valRes.trim());\r\n                    } else {\r\n                        let val = compileTpl(attrVal, data);\r\n                        node.setAttribute(key, val);\r\n                    }\r\n                } else if (RegexpStr.kOnAttribute.test(attrName)) {\r\n                    let event = attrName.replace(RegexpStr.kOnAttribute, '$1');\r\n                    let func = compileTpl(attrVal, data);\r\n                    let match = func.match(RegexpStr.methodAndParam);\r\n                    let method = match[1];\r\n                    let params = match[2];\r\n                    let paramsArr = params.split(\",\")\r\n                    for (var n = 0; n < paramsArr.length; n++) {\r\n                        if (paramsArr[n] === 'this') {\r\n                            paramsArr[n] = this.$dom;\r\n                        } else {\r\n                            paramsArr[n] = String(paramsArr[n]).trim();\r\n                        }\r\n                    }\r\n                    if (!isNull(component)) {\r\n                        bindEvent(node, event, method, paramsArr, component.methods, component.$data);\r\n                    } else {\r\n                        bindEvent(node, event, method, paramsArr, kmv.methods, kmv.data);\r\n                    }\r\n                    node.removeAttribute(attrName);\r\n                } else {\r\n                    node.setAttribute(attrName, attrVal);\r\n                }\r\n                if (this.kshow) {\r\n                    let isShow = getDotVal(data, this.kshow);\r\n                    this.$dom.style.display = !!isShow ? \"block\" : \"none\";\r\n                }\r\n                if (this.kif) {\r\n                    let isIf = getDotVal(data, this.kif);\r\n                    if (!isIf) DomOp.replaceNode(this.$dom, this.$emptyComment);\r\n                    else DomOp.replaceNode(this.$emptyComment, this.$dom)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    reRenderAttr (data, kmv, component: any = {}) {\r\n        let node = this.$dom;\r\n        for (let i = 0; i < this.attributes.length; i++) {\r\n            let attr = this.attributes[i];\r\n            let attrName = attr.nodeName, attrVal = attr.nodeValue;\r\n            if (isKvmAttribute(attrName)) {\r\n                if (RegexpStr.kAttribute.test(attrName)) {\r\n                    let key = attr.nodeName.replace(RegexpStr.kAttribute, '$1');\r\n                    if (key === 'class') {\r\n                        // 类 a:'class2', b:'class2'\r\n                        let arr = attrVal.split(\",\");\r\n                        let valRes = \"\";\r\n                        for (var n = 0; n < arr.length; n++) {\r\n                            var ak = arr[n].split(\":\")[0];\r\n                            if (getDotVal(data, ak.trim())) {\r\n                                valRes += arr[n].split(\":\")[1].trim() + \" \";\r\n                            }\r\n                        }\r\n                        node.setAttribute(key, valRes.trim());\r\n                        node.removeAttribute(attrName);\r\n                    } else {\r\n                        let newVal = compileTpl(attrVal, data);\r\n                        let oldVal = node.getAttribute(key);\r\n                        newVal !== oldVal && node.setAttribute(key, newVal);\r\n                        node.removeAttribute(attrName);\r\n                    }\r\n                } else {\r\n                    let newVal = compileTpl(attrVal, data);\r\n                    let oldVal = node.getAttribute(attrName);\r\n                    newVal !== oldVal && node.setAttribute(attrName, newVal);\r\n                }\r\n            } else if (RegexpStr.kOnAttribute.test(attrName)) {\r\n                node.removeAttribute(attrName);\r\n            } else {\r\n                node.setAttribute(attrName, attrVal);\r\n            }\r\n        }\r\n        if (!isNull(component)) {\r\n            if (this.kshow) {\r\n                let isShow = getDotVal(component.$data, this.kshow);\r\n                this.$dom.style.display = !!isShow ? \"block\" : \"none\";\r\n            }\r\n            if (this.kif) {\r\n                let isIf = getDotVal(component.$data, this.kif);\r\n                if (!isIf) DomOp.replaceNode(this.$dom, this.$emptyComment);\r\n            }\r\n        } else {\r\n            if (this.kshow) {\r\n                let isShow = getDotVal(data, this.kshow);\r\n                this.$dom.style.display = !!isShow ? \"block\" : \"none\";\r\n            }\r\n            if (this.kif) {\r\n                let isIf = getDotVal(data, this.kif);\r\n                if (!isIf) DomOp.replaceNode(this.$dom, this.$emptyComment);\r\n                else DomOp.replaceNode(this.$emptyComment, this.$dom);\r\n            }\r\n        }\r\n    }\r\n}","import { ForItemDOM } from './ForItemDOM'\r\nimport { RegexpStr, ArrayOp } from '../constants/constant'\r\nimport { getDotVal, depCopy, isNull } from \"../util/object\"\r\nimport * as DomOp from \"../dom/domOp\"\r\nimport {diff, depCopyArray} from \"../util/array\";\r\nimport {isUnknowElement} from \"../util/validator\";\r\nimport {ComponentDOM} from \"./ComponentDOM\";\r\nimport { VDOM } from \"./VDOM\";\r\n\r\nexport class ForDOM extends VDOM {\r\n    nextSibling;        // 后一个元素\r\n    templateNode;       // 模板节点, 共列表元素使用\r\n    parentNode;         // 父节点\r\n    childrenVdom = [];\r\n    forObjectKey;   // arr\r\n    forKey;         // i\r\n    tagName;\r\n    $data;          // 存放遍历的数据，下次比较\r\n    $dom;           // 对应的真实dom\r\n    isList;\r\n    node;\r\n    isComponent;\r\n    // 第三个参数组件用的\r\n    constructor (node, kmv, parentComponent = {}) {\r\n        super(node, kmv);\r\n        this.nextSibling = node.nextSibling;\r\n        this.parentNode = node.parentNode;\r\n        this.tagName = node.tagName;\r\n        this.templateNode = node;\r\n        this.isList = true;\r\n        let forString = node.getAttribute(\"k-for\");\r\n        let match = RegexpStr.forStatement.exec(forString);\r\n        this.forObjectKey = match[2].trim();        // 循环的键 item in arr 的 arr\r\n        this.forKey = match[1].trim();              // 循环的key值 item in arr 的 item\r\n        this.node = node;\r\n        // 组件用组件的数据，否则用原始数据\r\n        let srcData = isNull(parentComponent) ? kmv.data: parentComponent['$data'];\r\n        let iteratorData = getDotVal(srcData, this.forObjectKey);\r\n        if (Array.isArray(iteratorData)) {\r\n            this.$data = depCopyArray(iteratorData);\r\n        } else {\r\n            this.$data  = depCopy(iteratorData);\r\n        }\r\n        this.isComponent = true;\r\n    }\r\n    renderInit(data, kmv) {\r\n        let docFrag = this.transDOM(data, kmv);\r\n        this.$dom = docFrag.firstChild;\r\n        this.insertNewDOM(docFrag);\r\n        DomOp.removeNode(this.node);\r\n    }\r\n    transDOM (data, kmv) {\r\n        let iteratorData = getDotVal(data, this.forObjectKey);\r\n        let docFrag = document.createDocumentFragment();\r\n        // 组件的话拼接\r\n        if (Array.isArray(this.$data)) {\r\n            // 数组循环\r\n            // this.$data = iteratorData.slice(0);\r\n            for (let i = 0; i < this.$data.length; i++) {\r\n                let iteratorObj = Object.create(data);     // 构造遍历的对象\r\n                iteratorObj[this.forKey] = this.$data[i];\r\n                // 第三个参数传递给组件的对象\r\n                let forItem = new ForItemDOM(this.templateNode.cloneNode(true), kmv, iteratorObj);\r\n                this.childrenVdom.push(forItem);\r\n                let forItemDom = forItem.transDOM(iteratorObj, kmv);\r\n                docFrag.appendChild(forItemDom);\r\n            }\r\n        } else if (typeof iteratorData === 'object') {\r\n            // 对象循环\r\n            this.$data = iteratorData;\r\n            for (let i in iteratorData) {\r\n                let forItem = new ForItemDOM(this.templateNode, kmv, data);\r\n                this.childrenVdom.push(forItem);\r\n                let iteratorObj = Object.create(data);     // 构造遍历的对象\r\n                iteratorObj[this.forKey] = this.$data[i];\r\n                let forItemDom = forItem.transDOM(iteratorObj, kmv);\r\n                docFrag.appendChild(forItemDom);\r\n            }\r\n        }\r\n        return docFrag;\r\n    }\r\n    insertNewDOM (docFrag) {\r\n        if (this.nextSibling) {\r\n            DomOp.insertBefore(this.nextSibling, docFrag);\r\n        } else if (this.parentNode) {\r\n            DomOp.appendChild(this.parentNode, docFrag);\r\n        }\r\n    }\r\n    reRender (data, kmv, component: ComponentDOM = null) {\r\n        let arrKey = this.forObjectKey;\r\n        let newDatas = getDotVal(data, arrKey); // 获取新的数据集合\r\n        if (Array.isArray(this.$data)) {\r\n            let change = diff(this.$data, newDatas);\r\n            if (change.length) {\r\n                this.notifyDataChange(change, kmv, newDatas, component);\r\n                this.$data = depCopyArray(newDatas);\r\n            } else {\r\n                for (let i = 0, len = this.$data.length; i < len; i++) {\r\n                    let iteratorObj = Object.create(data);  // data\r\n                    iteratorObj[this.forKey] = this.$data[i];\r\n                    this.childrenVdom[i] && this.childrenVdom[i].reRender(iteratorObj, kmv, component);\r\n                }\r\n            }\r\n        } else if (typeof newDatas === 'object'){\r\n            // 渲染对象\r\n            let idx = 0;\r\n            for (let key in this.$data) {\r\n                let iteratorObj = Object.create(data);\r\n                iteratorObj[this.forKey] = this.$data[key];\r\n                this.childrenVdom[idx].reRender(iteratorObj, kmv);\r\n                idx++;\r\n            }\r\n        }\r\n    }\r\n    notifyDataChange (change, kmv, newDatas, component) {\r\n        if (Array.isArray(this.$data)) {\r\n            for (let i = 0; i < change.length; i++) {\r\n                var op = change[i].op;\r\n                if (change[i].batch) {\r\n                    switch (op) {\r\n                        case ArrayOp.PUSH:\r\n                            this.batchAdd(change[i].array, kmv, component);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    switch (op) {\r\n                        case ArrayOp.PUSH:\r\n                            this.addNewItem(change[i].text, kmv);\r\n                            break;\r\n                        case ArrayOp.POP:\r\n                            this.popItem();\r\n                            break;\r\n                        case ArrayOp.CHANGE:\r\n                            this.changeItem (change[i].index, kmv, newDatas, component)\r\n                            break\r\n                        case ArrayOp.SHIFT:\r\n                            this.shiftItem();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    batchAdd (arr = [], kmv, component: ComponentDOM = null) {\r\n        let docFrag = document.createDocumentFragment();\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            let iteratorObj;     // 构造遍历的对象\r\n            if (component) {\r\n                iteratorObj = Object.create(component.$data);\r\n            } else {\r\n                iteratorObj = Object.create(kmv.data);\r\n            }\r\n            iteratorObj[this.forKey] = arr[i];\r\n            let newItem = new ForItemDOM(this.templateNode, kmv, iteratorObj);\r\n            this.childrenVdom.push(newItem);\r\n            let newDom = newItem.transDOM(iteratorObj, kmv);\r\n            docFrag.appendChild(newDom);\r\n        }\r\n        this.insertNewDOM(docFrag)\r\n    }\r\n    addNewItem (val, kmv) {\r\n        let newItem = new ForItemDOM(this.templateNode, kmv);\r\n        let iteratorObj = Object.create(kmv.data);     // 构造遍历的对象\r\n        iteratorObj[this.forKey] = val;\r\n        let newDom = newItem.transDOM(iteratorObj, kmv);\r\n        this.childrenVdom.push(newItem);\r\n        this.insertNewDOM(newDom);\r\n    }\r\n    popItem () {\r\n        let popVdom = this.childrenVdom.pop();\r\n        popVdom.$dom && DomOp.removeNode(popVdom.$dom);\r\n    }\r\n    changeItem (i, kmv, newArray, component) {\r\n        let iteratorObj;\r\n        if (!isNull(component)) {\r\n            iteratorObj = Object.create(component.$data);\r\n        } else {\r\n            iteratorObj = Object.create(kmv.data);\r\n        }\r\n        iteratorObj[this.forKey] = newArray[i];\r\n        this.childrenVdom[i].reRender(iteratorObj, kmv);\r\n    }\r\n    shiftItem () {\r\n        let shiftVdom = this.childrenVdom.shift();\r\n        this.childrenVdom.shift();\r\n        DomOp.removeNode(shiftVdom.$dom);\r\n    }\r\n}","import { RegexpStr } from '../constants/constant'\r\n\r\nexport let isBraceReg = (str: string) => {\r\n    return RegexpStr.brace.test(str);\r\n}\r\n\r\n/**\r\n *  是否有包含语法\r\n * @param str\r\n */\r\nexport let isForStatement = (str: string) => {\r\n    return RegexpStr.forStatement.test(str);\r\n}\r\n\r\n\r\nexport let isKvmAttribute = (key) => {\r\n    return RegexpStr.arrtibuteKey.test(key);\r\n}\r\n\r\nexport let isUnknowElement = (tag) => {\r\n    var el = document.createElement(tag);\r\n    if (tag.indexOf('-') > -1) {\r\n        // http://stackoverflow.com/a/28210364/1070244\r\n        return (\r\n            el.constructor === (<any>window).HTMLUnknownElement ||\r\n            el.constructor === (<any>window).HTMLElement\r\n        )\r\n    } else {\r\n        return /HTMLUnknownElement/.test(el.toString())\r\n    }\r\n}","import { getDotVal, setObserveDotVal } from \"../util/object\";\r\nimport {VDOM} from \"./VDOM\";\r\n\r\nexport class InputDOM extends VDOM {\r\n    nodeType;\r\n    tagName;\r\n    attributes;\r\n    template;\r\n    childrenVdom = [];\r\n    $dom;       // 联系真实dom\r\n    kmodel;\r\n    constructor (node) {\r\n        super(node);\r\n        this.tagName = node.tagName;\r\n        this.attributes = node.attributes;\r\n        this.nodeType = node.nodeType;\r\n        this.kmodel = node.getAttribute(\"k-model\");\r\n        this.$dom = node;\r\n        node.removeAttribute(\"k-model\");\r\n    }\r\n    renderInit(data, kmv) {\r\n        this.$dom.value = getDotVal(data, this.kmodel);\r\n        this.$dom.oninput = (ev) => {\r\n            setObserveDotVal(data, this.kmodel, this.$dom.value);\r\n        }\r\n        this.renderAttr(data, kmv, null);\r\n    }\r\n    reRender (data, kmv) {\r\n        let text = getDotVal(data, this.kmodel);\r\n        this.$dom.value = text;\r\n        this.reRenderAttr(data, kmv, null);\r\n    }\r\n}","import { RegexpStr } from '../constants/constant'\r\nimport { getDotVal, depCopy } from './object'\r\nimport { evalJs } from './function'\r\n/**\r\n *  转换逻辑操作运算结果\r\n *\r\n */\r\nexport let transArithmeticOp = (tpl, obj) => {\r\n\r\n    let opReg = RegexpStr.arithmeticOp;\r\n    let arr = tpl.split(opReg);   // 符号切分\r\n    let opRegArr = tpl.match(opReg);\r\n    let isParamReg = RegexpStr.isParams;\r\n\r\n    let tmp;\r\n    let newStr = '';\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n        tmp = arr[i].trim();\r\n        if (isParamReg.test(tmp)) {\r\n            // 如果是变量\r\n            let val = getDotVal(obj, tmp);\r\n            if (isNaN(val)) {       // 字符串\r\n                newStr += '\"' + val + '\"';\r\n            } else {\r\n                if (!val) val = 0;\r\n                newStr += val;\r\n            }\r\n        } else {\r\n            newStr += tmp;\r\n        }\r\n\r\n        if (i < arr.length - 1) {\r\n            newStr += opRegArr[i];\r\n        }\r\n    }\r\n    let res = eval(newStr);\r\n    return res;\r\n}\r\n\r\nexport let transTernaryOperator = (tpl, obj) => {\r\n    let arr = tpl.split(/\\?|:|\\(|\\)|\\+|-|\\*|\\/|!/);\r\n    let match = tpl.match(/\\?|:|\\(|\\)|\\+|-|\\*|\\/|!/g);\r\n\r\n    let newStr = '';\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let item = arr[i].trim();\r\n        if (item && RegexpStr.isParams.test(item)) {\r\n            newStr += '_data.' + item;\r\n        } else {\r\n            newStr += item;\r\n        }\r\n        if (match[i])\r\n            newStr += match[i];\r\n    }\r\n    return (function(str, _data) {\r\n        return eval(str);\r\n    })(newStr, obj)\r\n}\r\n\r\nexport let compileTpl = (tpl, obj) => {\r\n    let braceReg = RegexpStr.brace;\r\n    var regRes;\r\n    while (regRes = braceReg.exec(tpl)) {\r\n        let key = regRes ? regRes[1].trim() : '';\t// 获取括号的键\r\n        if (key) {\r\n            let text = evalJs(key, obj);\r\n            tpl = tpl.replace(braceReg, text);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n    /*var regRes;\r\n    while (regRes = braceReg.exec(tpl)) {\r\n        let key = regRes ? regRes[1].trim() : '';\t// 获取括号的键\r\n        let opReg = RegexpStr.arithmeticOp;     // 是否有操作符\r\n        let text = '';\r\n        if (key) {\r\n            if (opReg.test(key)) {\r\n                text = transArithmeticOp(key, obj);\r\n            } else if (RegexpStr.isTernaryOp.test(key)) {\r\n                text = transTernaryOperator(key, obj);\r\n            } else {\r\n                text = getDotVal(obj, key);\r\n            }\r\n            tpl = tpl.replace(braceReg, text);\r\n        } else {\r\n            return '';\r\n        }\r\n    }*/\r\n    return tpl;\r\n}\r\n\r\n\r\n","import { NormalDOM } from './NormalDOM'\r\nimport { VDOM } from './VDOM'\r\nimport * as DomOp from '../dom/domOp'\r\nimport {RegexpStr, NodeType} from \"../constants/constant\"\r\nimport {\r\n    depCopy, getDotVal, isNull,\r\n    extend\r\n} from \"../util/object\"\r\nimport { VDOMInterface } from \"./VDOMInterface\"\r\nimport {ForDOM} from \"./ForDOM\";\r\nimport {observer} from \"../core/observer\";\r\nimport {isUnknowElement} from \"../util/validator\";\r\nimport {InputDOM} from \"./InputDOM\";\r\n\r\nexport class ComponentDOM extends VDOM implements VDOMInterface {\r\n    nodeType;\r\n    tagName;\r\n    attributes;\r\n    template;\r\n    childrenVdom = [];\r\n    $dom;       // 联系真实dom\r\n    $data = {};\r\n    node;\r\n    methods;\r\n    isComponent = true;\r\n    forKey;\r\n    model;\r\n    constructor (node, kmv, parent: any = null) {\r\n        super(node);\r\n        this.isComponent = true;\r\n        this.tagName = node.tagName;\r\n        let component = kmv.components[this.tagName.toLowerCase()]; // 组件配置\r\n        if (component) {\r\n            this.methods = component.methods;\r\n            let div = document.createElement(\"div\");\r\n            div.innerHTML = component.template.trim() ;         // 转为dom\r\n            this.template = component.template.trim();\r\n            this.attributes = node.attributes;\r\n            for (let i = 0; i < node.attributes.length; i++) {\r\n                (<any> div.firstChild).setAttribute(node.attributes[i].nodeName, node.attributes[i].nodeValue);\r\n            }\r\n            this.node = node;\r\n            this.$dom = div.firstChild; // 关联dom\r\n            this.model = node.getAttribute(\":model\");    // 数据键\r\n            // console.log(parentData, this.model);\r\n            let parentData;\r\n            if (parent instanceof ComponentDOM) {\r\n                parentData = parent['$data'];\r\n            } else {\r\n                parentData = kmv.data;\r\n            }\r\n            this.$data = {\r\n                model: getDotVal(parentData, this.model)\r\n            };   // 渲染的数据\r\n            if (component.data) {\r\n                this.$data = extend(this.$data, component.data());\r\n            }\r\n            observer(this.$data, kmv);\r\n            if (this.$data['model']) {\r\n                for (let i = 0; i < this.$dom.childNodes.length; i++) {\r\n                    let child = this.$dom.childNodes[i];\r\n                    if (child.nodeType == NodeType.ELEMENT) {\r\n                        if (child.getAttribute(\"k-for\")) {\r\n                            this.childrenVdom.push(new ForDOM(child, kmv, this));\r\n                        } else if (child.getAttribute(\"k-model\") && RegexpStr.inputElement.test(child.tagName)) {\r\n                            this.childrenVdom.push(new InputDOM(child));\r\n                        } else if (isUnknowElement(child.tagName)) {\r\n                            this.childrenVdom.push(new ComponentDOM(child, kmv, this));\r\n                        } else {\r\n                            this.childrenVdom.push(new NormalDOM(child, kmv, this));\r\n                        }\r\n                    } else {\r\n                        this.childrenVdom.push(new NormalDOM(child, kmv, this));\r\n                    }\r\n                }\r\n            }\r\n            this.node = node;\r\n        } else {\r\n            console.error(\"无效标签\" + this.tagName);\r\n        }\r\n    }\r\n    renderInit(data = null, kmv) {\r\n        this.insertNewDOM();\r\n        DomOp.removeNode(this.node);\r\n        // 先插入后渲染\r\n        this.childrenVdom.forEach((child) => {\r\n            child.renderInit(this.$data, kmv, this);\r\n        });\r\n    }\r\n    transDOM (data, kmv) {\r\n        return this.$dom;\r\n    }\r\n    reRender(data, kmv) {\r\n        this.childrenVdom.forEach((child) => {\r\n            child.reRender(this.$data, kmv, this);\r\n        });\r\n    }\r\n    getRealDOM () {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = this.template;         // 转为dom\r\n        return div.firstChild;\r\n    }\r\n    replaceDOM () {\r\n    }\r\n    insertNewDOM () {\r\n        DomOp.insertBefore(this.node, this.$dom);\r\n        DomOp.removeNode(this.node);\r\n    }\r\n}","import * as ObjectUtil from '../util/object'\r\nimport { ArrayMethod } from '../constants/constant'\r\nimport { getDotVal } from \"../util/object\";\r\nimport { setObserveDotVal } from \"../util/object\";\r\nimport {depCopy} from \"../util/object\";\r\n\r\n/**\r\n *   URL:\r\n *   说明:\r\n *   负责人: kelen\r\n *   日期:  1/24 0024.\r\n */\r\nexport let observer = (obj, kmv, key = '') => {\r\n    let srcData = depCopy(obj);\r\n    for (let i in obj) {\r\n        let bigKey = key ? key + \".\" + i : i;\r\n        let defVal = obj[i];\r\n        Object.defineProperty(obj, i, {\r\n            configurable: true,\r\n            set: function (newVal) {\r\n                kmv.pendingValue = true;\r\n                kmv.changeQueue.push({\r\n                    kmv: kmv,\r\n                    bigKey: bigKey\r\n                });\r\n                kmv.watch[bigKey] && kmv.watch[bigKey].call(kmv.data, newVal);\r\n                this['__' + i + '__'] = newVal;\r\n            },\r\n            get: function() {\r\n                return this['__' + i + '__'] == undefined ? defVal : this['__' + i + '__'];\r\n            }\r\n        })\r\n        if (typeof obj[i] == 'object') {\r\n            if (Array.isArray(obj[i])) {\r\n                arrayObserve(obj[i], kmv, bigKey);\r\n            } else {\r\n                observer(obj[i], kmv, bigKey);\r\n            }\r\n        }\r\n        /*((defVal) => {\r\n            let val = defVal;\r\n            Object.defineProperty(obj, i, {\r\n                set: function (newVal) {\r\n                    // ObjectUtil.setObserveDotVal(kmv.$data, bigKey, newVal);\r\n                    kmv.pendingValue = true;\r\n                    kmv.changeQueue.push({\r\n                        kmv: kmv,\r\n                        bigKey: bigKey\r\n                    });\r\n                    kmv.watch[bigKey] && kmv.watch[bigKey].call(kmv.data, newVal);\r\n                    val = newVal;\r\n                },\r\n                get: function() {\r\n                    return val; // getDotVal(kmv.$data, bigKey) || defVal;\r\n                }\r\n            })\r\n        })(obj[i])*/\r\n    }\r\n    return srcData;\r\n}\r\n\r\nfunction arrayObserve(arr, kmv, bigKey) {\r\n    // 监听array操作\r\n    ArrayMethod.forEach((method) => {\r\n        Object.defineProperty(arr, method, {\r\n            configurable: true,\r\n            enumerable: false, // hide from for...in\r\n            writable: true,\r\n            value: function () {\r\n                // 有可能操作的不是数组\r\n                Array.prototype[method].apply(arr, arguments);\r\n                kmv.changeQueue.push({\r\n                    kmv: kmv,\r\n                    bigKey: bigKey\r\n                });\r\n                kmv.pendingValue = true;\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n","import { ArrayOp } from \"../constants/constant\"\r\nimport {depCopy} from \"./object\";\r\n\r\nexport let diff = (arr1 = [], arr2 = []) => {\r\n    let change = [];\r\n    let cp = arr1.slice(0), cp2 = arr2.slice(0);        // 拷贝一份\r\n    let len1 = arr1.length, len2 = arr2.length;\r\n    let len = Math.min(len1, len2);\r\n    for (let i = 0; i < len; i++) {\r\n        if (arr1[i] !== arr2[i]) {\r\n            change.push({\r\n                op: ArrayOp.CHANGE,\r\n                index: i,\r\n                text: arr2[i]\r\n            })\r\n        }\r\n    }\r\n    if (len1 > len2) {\r\n        let deleteArr = arr1.slice(len2);\r\n        // 删除dom\r\n        for (let i = 0; i < deleteArr.length; i++) {\r\n            change.push({\r\n                op: ArrayOp.POP,\r\n                index: i + len2,\r\n                text: deleteArr[i]\r\n            })\r\n        }\r\n    } else if (len2 > len1) {\r\n        let addArr = arr2.slice(len1);\r\n        change.push({\r\n            batch: true,\r\n            op: ArrayOp.PUSH,\r\n            array: addArr\r\n        })\r\n    }\r\n    return change;\r\n}\r\n\r\nexport let depCopyArray = (arr) => {\r\n    if (typeof arr === 'object')\r\n        return JSON.parse(JSON.stringify(arr));\r\n    else {\r\n        return [];\r\n    }\r\n}","import { compileTpl } from '../util/template'\r\nimport * as DomOp from '../dom/domOp'\r\nimport { NodeType, RegexpStr } from \"../constants/constant\"\r\nimport { VDOM } from './VDOM'\r\nimport { ForDOM } from './ForDOM'\r\nimport { InputDOM } from './InputDOM'\r\nimport { isUnknowElement } from '../util/validator'\r\nimport { ComponentDOM } from './ComponentDOM'\r\nimport { getDotVal } from \"../util/object\";\r\nimport { renderInit } from \"../util/render\";\r\n\r\nexport class NormalDOM extends VDOM {\r\n    nodeType;\r\n    tagName;\r\n    attributes;\r\n    template;\r\n    childrenVdom = [];\r\n    $dom;       // 联系真实dom\r\n    // 第三个参数传递给子组件的数据\r\n    constructor (node, kmv, parentData: any = {}) {\r\n        super(node);\r\n        switch (node.nodeType) {\r\n            case NodeType.TEXT:\r\n                this.template = node.textContent;\r\n                node.textContent = '';\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                break;\r\n        }\r\n        this.tagName = node.tagName,\r\n        this.attributes = node.attributes && ([].slice.call(node.attributes).slice(0)),\r\n        this.nodeType = node.nodeType;\r\n        this.$dom = node;\r\n        if (node.childNodes) {\r\n            for (let i = 0; i < node.childNodes.length; i++) {\r\n                let child = node.childNodes[i];\r\n                if (child.nodeType === NodeType.ELEMENT) {\r\n                    if (child.getAttribute(\"k-for\")) {\r\n                        this.childrenVdom.push(new ForDOM(child, kmv, parentData));\r\n                    } else if (child.getAttribute(\"k-model\") && RegexpStr.inputElement.test(child.tagName)) {\r\n                        this.childrenVdom.push(new InputDOM(child));\r\n                    } else if (isUnknowElement(child.tagName)) {\r\n                        this.childrenVdom.push(new ComponentDOM(child, kmv, parentData));\r\n                    } else {\r\n                        this.childrenVdom.push(new NormalDOM(child, kmv, parentData));\r\n                    }\r\n                } else {\r\n                    this.childrenVdom.push(new NormalDOM(child, kmv, parentData));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    renderInit(data, kmv, component: ComponentDOM = null) {\r\n        switch (this.nodeType) {\r\n            case NodeType.TEXT:\r\n                let text;\r\n                if (component) {\r\n                    text = compileTpl(this.template, component.$data);\r\n                } else {\r\n                    text = compileTpl(this.template, data);\r\n                }\r\n                DomOp.changeTextContent(this.$dom, text);\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                this.childrenVdom.forEach((child) => {\r\n                    child.renderInit(data, kmv, component);\r\n                });\r\n                this.renderAttr(data, kmv, component);\r\n                break;\r\n        }\r\n    }\r\n    reRender (data, kmv, component) {\r\n        switch (this.nodeType) {\r\n            case NodeType.TEXT:\r\n                let text;\r\n                if (component) {\r\n                    text = compileTpl(this.template, component.$data);\r\n                } else {\r\n                    text = compileTpl(this.template, data);\r\n                }\r\n                text && DomOp.changeTextContent(this.$dom, text)\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                this.childrenVdom.forEach((child) => {\r\n                    child.reRender(data, kmv, component);\r\n                });\r\n                this.reRenderAttr(data, kmv, component);\r\n                break;\r\n        }\r\n    }\r\n    insertNewDOM (newDom) {\r\n        if (this.nextSibling) {\r\n            DomOp.insertBefore(this.nextSibling, newDom);\r\n        } else if (this.parentNode) {\r\n            DomOp.appendChild(this.parentNode, newDom);\r\n        }\r\n    }\r\n    transDOM (data, kmv) {\r\n        this.renderInit(data, kmv);\r\n        this.childrenVdom.forEach((child) => {\r\n            this.$dom.appendChild(child.transDOM(data, kmv));\r\n        });\r\n        return this.$dom;\r\n    }\r\n}","import { renderInit } from './util/render'\r\nimport { observer } from './core/observer'\r\nimport { RenderQueue } from \"./core/RenderQueue\"\r\nimport { Event } from './util/event'\r\nimport { extend } from './util/object'\r\n\r\nfunction Kmv(opts) {\r\n\r\n    let elSelector = opts['el'];\r\n    let elem = document.querySelector(elSelector);\r\n    if (!elem) {\r\n        console.error(\"元素\" + elSelector + \"不存在!\");\r\n        return;\r\n    }\r\n    this.data = opts.data;\r\n    // 原始数据\r\n    this.watch = opts.watch || {};\r\n    this.pendingValue = false;\r\n    this.changeQueue = [];      // 每次循环改变队列\r\n    this.methods = opts.methods;    // 自定义事件\r\n\r\n    this.components = extend(this.components, opts.components);\r\n    this.mounted = typeof opts.mounted === 'function' ? opts.mounted : null;\r\n\r\n    let that = this;\r\n    if (opts.beforeInit) {\r\n        let event = new Event();\r\n        // 初始化数据事件\r\n        event.$once(\"initData\", function(data) {\r\n            let allData = extend(opts.data, data);\r\n            observer(allData, that);\r\n            // 获取需要渲染的dom列表\r\n            that.renderQueue = new RenderQueue(elem, this);\r\n            renderInit(that);\r\n        });\r\n        opts.beforeInit.call(that, event);\r\n    } else {\r\n        observer(opts.data, this);\r\n        // 获取需要渲染的dom列表\r\n        this.renderQueue = new RenderQueue(elem, this);\r\n        renderInit(this);\r\n    }\r\n    this.mounted && this.mounted.call(this);\r\n    return this;\r\n}\r\n\r\n(<any>Kmv).components = (name, config) => {\r\n    if (!Kmv.prototype.components) {\r\n        Kmv.prototype.components = {};\r\n    }\r\n    Kmv.prototype.components[name] = config;\r\n}\r\n\r\n(<any>window).Kmv = Kmv;\r\n\r\n\r\n","import { RenderType } from '../constants/constant'\r\nimport { getDotVal } from './object'\r\nimport { diff } from \"./array\";\r\n\r\nexport let renderInit = (kmv) => {\r\n    let watcher = kmv.renderQueue;\r\n    let renderQueue = watcher.getQueue();\r\n    for (let i = 0; i < renderQueue.length; i++) {\r\n        let node = renderQueue[i];\r\n        node.renderInit(kmv.data, kmv);\r\n    }\r\n    nextTick(kmv);\r\n}\r\n\r\nlet nextTickHandler = (kmv) => {\r\n    if (kmv.pendingValue) {\r\n        kmv.pendingValue = false;\r\n        let lastOne = kmv.changeQueue.pop();\r\n        lastOne && reRender(lastOne.kmv, lastOne.bigKey);\r\n        kmv.changeQueue.length = 0;\r\n    }\r\n    nextTick(kmv);\r\n}\r\n\r\nexport let nextTick = (kmv) => {\r\n    setTimeout(function() {\r\n        // 下一次事件循环\r\n        nextTickHandler(kmv);\r\n    }, 0);\r\n}\r\n\r\nexport let reRender = (kmv, key) => {\r\n    let renderQueue = kmv.renderQueue.getQueue();\r\n    for (let i = 0; i < renderQueue.length; i++) {\r\n        let node = renderQueue[i];\r\n        node.reRender(kmv.data, kmv);\r\n    }\r\n}\r\n\r\n","import { NodeType, RegexpStr } from '../constants/constant'\r\nimport { ForDOM } from \"../vdom/ForDOM\"\r\nimport { NormalDOM } from \"../vdom/NormalDOM\"\r\nimport { InputDOM } from \"../vdom/InputDOM\"\r\nimport { isUnknowElement } from '../util/validator'\r\nimport { ComponentDOM } from \"../vdom/ComponentDOM\";\r\n\r\nexport class RenderQueue {\r\n    queue = [];\r\n    kmv;\r\n    constructor(node, kmv) {\r\n        this.kmv = kmv;\r\n        this.queue = this.queueInit(node);\r\n    }\r\n    getQueue() {\r\n        return this.queue;\r\n    }\r\n    queueInit (parentNode) {\r\n        let childNodes = parentNode.childNodes;\r\n        for (let i = 0; i < childNodes.length; i++) {\r\n            let child = childNodes[i];\r\n            switch (child.nodeType) {\r\n                case NodeType.TEXT:\r\n                    this.queue.push(new NormalDOM(child, this.kmv));\r\n                    break;\r\n                case NodeType.ELEMENT:\r\n                    if (isUnknowElement(child.tagName)) {\r\n                        // 组件\r\n                        this.queue.push(new ComponentDOM(child, this.kmv, null));\r\n                    } else {\r\n                        if (child.getAttribute(\"k-for\")) {\r\n                            this.queue.push(new ForDOM(child, this.kmv, this.kmv.data));\r\n                        } else if (child.getAttribute(\"k-model\") && RegexpStr.inputElement.test(child.tagName)) {\r\n                            this.queue.push(new InputDOM(child));\r\n                        } else {\r\n                            // 常规dom不需要传第三个参数\r\n                            this.queue.push(new NormalDOM(child, this.kmv));\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        return this.queue;\r\n    }\r\n}\r\n\r\n","import * as DomOp from \"../dom/domOp\"\r\nimport { ForNormalDOM } from './ForNormalDOM'\r\nimport { VDOM } from './VDOM'\r\nimport { ForDOM } from './ForDOM'\r\nimport { InputDOM } from './InputDOM'\r\nimport { NodeType, RegexpStr } from \"../constants/constant\"\r\nimport {isUnknowElement} from \"../util/validator\";\r\nimport {ComponentDOM} from \"./ComponentDOM\";\r\nimport {getDotVal} from \"../util/object\";\r\n\r\nexport class ForItemDOM extends VDOM {\r\n    tagName;\r\n    templateNode;       // 模板节点, 每次构造时候需要获取template和attributes\r\n    childrenVdom = [];\r\n    attributes;\r\n    $dom;\r\n    template;\r\n    nodeType;\r\n    kshow;\r\n    componentInstance = null;\r\n    constructor (node, kmv, parentData = {}) {\r\n        super(node);\r\n        if (node.nodeType == NodeType.ELEMENT) {\r\n            if (isUnknowElement(node.tagName)) {\r\n                // 组件转换\r\n                this.componentInstance = new ComponentDOM(node, kmv, parentData);\r\n                node = new ComponentDOM(node, kmv, parentData).getRealDOM();\r\n                node.$data = parentData;\r\n                this.isComponent = true;\r\n            }\r\n        }\r\n        this.tagName = node.tagName;\r\n        this.attributes = node.attributes;\r\n        this.nodeType = node.nodeType;\r\n        this.templateNode = node;\r\n        for (let i = 0; i < node.childNodes.length; i++) {\r\n            let child = node.childNodes[i];\r\n            if (child.nodeType === NodeType.ELEMENT) {\r\n                if (isUnknowElement(child.tagName)) {\r\n                    this.childrenVdom.push(new ComponentDOM(child, kmv, parentData));\r\n                } else {\r\n                    if (child.getAttribute(\"k-for\")) {\r\n                        this.childrenVdom.push(new ForDOM(child, kmv, parentData));\r\n                    } else if (child.getAttribute(\"k-model\") && RegexpStr.inputElement.test(child.tagName)) {\r\n                        this.childrenVdom.push(new InputDOM(child));\r\n                    } else {\r\n                        this.childrenVdom.push(new ForNormalDOM(child, kmv, parentData))\r\n                    }\r\n                }\r\n            } else if (child.nodeType === NodeType.TEXT) {\r\n                this.childrenVdom.push(new ForNormalDOM(child, kmv, kmv.$data));\r\n            }\r\n        }\r\n        node.removeAttribute(\"k-for\");\r\n    }\r\n    transDOM(iteratorObj, kmv) {\r\n        let newElem = DomOp.createElement(this.tagName);\r\n        for (let i = 0, len = this.childrenVdom.length; i < len; i++) {\r\n            let childVdom = this.childrenVdom[i];\r\n            let newDom = childVdom.transDOM(iteratorObj, kmv, this.componentInstance);\r\n            newDom && newElem.appendChild(newDom);\r\n        }\r\n        this.$dom = newElem;\r\n        if (this.kshow) {\r\n            let isShow = getDotVal(iteratorObj, this.kshow);\r\n            this.$dom.style.display = !!isShow ? \"block\" : \"none\";\r\n        }\r\n        if (this.kif) {\r\n            let isIf = getDotVal(iteratorObj, this.kif);\r\n            if (!isIf) {\r\n                // 不显示\r\n                return this.$emptyComment;\r\n            }\r\n        }\r\n        return this.$dom;\r\n    }\r\n    // 重新渲染\r\n    reRender (iteratorObj, kmv, component: ComponentDOM = null) {\r\n        if (this.isComponent) {\r\n            // 需要子组件去渲染子元素\r\n            component = this.componentInstance;\r\n        }\r\n        this.childrenVdom.forEach((child) => {\r\n            child.reRender(iteratorObj, kmv, component);\r\n        });\r\n    }\r\n    insertNewDOM (newDom) {\r\n        if (this.nextSibling) {\r\n            DomOp.insertBefore(this.nextSibling, newDom);\r\n        } else if (this.parentNode) {\r\n            DomOp.appendChild(this.parentNode, newDom);\r\n        }\r\n    }\r\n}","import { compileTpl } from '../util/template'\r\nimport * as DomOp from '../dom/domOp'\r\nimport { VDOM } from './VDOM'\r\nimport { ForDOM } from './ForDOM'\r\nimport { InputDOM } from './InputDOM'\r\nimport { NodeType, RegexpStr } from \"../constants/constant\"\r\nimport { isUnknowElement } from '../util/validator'\r\nimport { ComponentDOM } from './ComponentDOM'\r\nimport {getDotVal} from \"../util/object\";\r\n\r\nexport class ForNormalDOM extends VDOM {\r\n    nodeType;\r\n    tagName;\r\n    attributes;\r\n    template;\r\n    childrenVdom = [];\r\n    $dom;       // 联系真实dom\r\n    constructor (node, kmv, parentData = {}) {\r\n        // h3\r\n        super(node);\r\n        this.tagName = node.tagName;\r\n        this.attributes = node.attributes && ([].slice.call(node.attributes).slice(0));\r\n        this.nodeType = node.nodeType;\r\n        switch (node.nodeType) {\r\n            case NodeType.TEXT:\r\n                this.template = node.textContent;\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                this.kshow = node.getAttribute(\"k-show\");\r\n                if (node.childNodes) {\r\n                    for (let i = 0; i < node.childNodes.length; i++) {\r\n                        let child = node.childNodes[i];\r\n                        if (child.nodeType === NodeType.ELEMENT) {\r\n                            if (child.getAttribute(\"k-for\")) {\r\n                                this.childrenVdom.push(new ForDOM(child, kmv, parentData));\r\n                            } else if (child.getAttribute(\"k-model\") && RegexpStr.inputElement.test(child.tagName)) {\r\n                                this.childrenVdom.push(new InputDOM(child));\r\n                            } else {\r\n                                this.childrenVdom.push(new ForNormalDOM(child, kmv, parentData))\r\n                            }\r\n                        } else {\r\n                            this.childrenVdom.push(new ForNormalDOM(child, kmv, parentData));\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    // iteratorObj 为遍历的数据，需要构造, 第三个组件实例\r\n    transDOM (data, kmv, component: any =  null) {\r\n        let newEle = document.createElement(this.tagName) ;\r\n        switch (this.nodeType) {\r\n            case NodeType.TEXT:\r\n                newEle = DomOp.createTextNode(this.tagName);\r\n                let text;\r\n                if (component) {\r\n                    text = compileTpl(this.template, component.$data);\r\n                } else {\r\n                    text = compileTpl(this.template, data);\r\n                }\r\n                newEle.textContent = text;\r\n                this.$dom = newEle;\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                newEle = document.createElement(this.tagName);\r\n                this.$dom = newEle;\r\n                this.childrenVdom\r\n                &&\r\n                this.childrenVdom.forEach((child) => {\r\n                    if (child instanceof ForDOM) {\r\n                        // 嵌套for\r\n                        child.parentNode = newEle;  // 嵌套父节点必须重新更新\r\n                        child.nextSibling = newEle.previousSibling;\r\n                        child.renderInit(data, kmv)\r\n                    } else {\r\n                        newEle.appendChild(child.transDOM(data, kmv, component));\r\n                    }\r\n\r\n                });\r\n                this.renderAttr(data, kmv, component);\r\n                break;\r\n        }\r\n        return newEle;\r\n    }\r\n    /**\r\n     * @param data      渲染的数据\r\n     * @param kmv       kmv\r\n     */\r\n    reRender (data, kmv, component) {\r\n        switch (this.nodeType) {\r\n            case NodeType.TEXT:\r\n                // 组件存在就用组件的数据去渲染\r\n                // component && (data = component.$data);\r\n                let text = compileTpl(this.template, data);\r\n                DomOp.changeTextContent(this.$dom, text)\r\n                break;\r\n            case NodeType.ELEMENT:\r\n                this.childrenVdom.forEach((child) => {\r\n                    if (child instanceof ForDOM) {\r\n                        // 嵌套for\r\n                        child.reRender(data, kmv, component)\r\n                    } else {\r\n                        child.reRender(data, kmv, component);\r\n                        this.reRenderAttr(data, kmv, component);\r\n                    }\r\n                })\r\n                break;\r\n        }\r\n    }\r\n}","export let evalJs = (content, obj) => {\r\n    // console.dir(obj);\r\n    // return (function() { return eval(content) }).call(obj);\r\n    let res;\r\n    try {\r\n        return new Function(\"with(this){ return \" + content + \" }\").call(obj);\r\n    } catch  (err) {\r\n        return '';\r\n    }\r\n}\r\n\r\nexport let evalFunc = (code) => {\r\n    return new Function(\"with(this){ console.log(this); return \" + code + \" }\");\r\n}","export let bindEvent = (node, event, method, params, methodsObj, observeData) => {\r\n    if (node.addEventListener) {\r\n        node.addEventListener(event, function() {\r\n            if (methodsObj && methodsObj[method]) {\r\n                methodsObj[method].apply(observeData, params);\r\n            } else {\r\n                console.error(\"未声明\" + method + \"方法\");\r\n            }\r\n        });\r\n    } else {\r\n        node.attachEvent(\"on\" + event, function() {\r\n            if (methodsObj && methodsObj[method]) {\r\n                methodsObj[method].apply(observeData, params);\r\n            } else {\r\n                console.error(\"未声明\" + method + \"方法\");\r\n            }\r\n        })\r\n    }\r\n}\r\n","export class Event {\r\n    eventObject = {};\r\n    constructor() {}\r\n    $on = (event, fn) => {\r\n        this.eventObject[event] = {\r\n            fn: fn,\r\n            once: false\r\n        };\r\n    }\r\n    $once = (event, fn) => {\r\n        this.eventObject[event] = {\r\n            fn: fn,\r\n            once: true\r\n        };\r\n    }\r\n    $emit = (event, params) => {\r\n        let thisEvent = this.eventObject[event];\r\n        if (thisEvent) {\r\n            if (thisEvent.once) {\r\n                thisEvent['fn'].apply(this, [].concat(params));\r\n                delete this.eventObject[event];\r\n            } else {\r\n                thisEvent['fn'].apply(this, [].concat(params));\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":""}